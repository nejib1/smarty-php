<?php
/**
* Smarty Internal Plugin Templateparser
*
* This is the template parser.
* It is generated from the internal.templateparser.y file
* @package Smarty
* @subpackage Compiler
* @author Uwe Tews
*/

class TP_yyToken implements ArrayAccess
{
    public $string = '';
    public $metadata = array();

    function __construct($s, $m = array())
    {
        if ($s instanceof TP_yyToken) {
            $this->string = $s->string;
            $this->metadata = $s->metadata;
        } else {
            $this->string = (string) $s;
            if ($m instanceof TP_yyToken) {
                $this->metadata = $m->metadata;
            } elseif (is_array($m)) {
                $this->metadata = $m;
            }
        }
    }

    function __toString()
    {
        return $this->_string;
    }

    function offsetExists($offset)
    {
        return isset($this->metadata[$offset]);
    }

    function offsetGet($offset)
    {
        return $this->metadata[$offset];
    }

    function offsetSet($offset, $value)
    {
        if ($offset === null) {
            if (isset($value[0])) {
                $x = ($value instanceof TP_yyToken) ?
                    $value->metadata : $value;
                $this->metadata = array_merge($this->metadata, $x);
                return;
            }
            $offset = count($this->metadata);
        }
        if ($value === null) {
            return;
        }
        if ($value instanceof TP_yyToken) {
            if ($value->metadata) {
                $this->metadata[$offset] = $value->metadata;
            }
        } elseif ($value) {
            $this->metadata[$offset] = $value;
        }
    }

    function offsetUnset($offset)
    {
        unset($this->metadata[$offset]);
    }
}

class TP_yyStackEntry
{
    public $stateno;       /* The state-number */
    public $major;         /* The major token value.  This is the code
                     ** number for the token at this stack level */
    public $minor; /* The user-supplied minor token value.  This
                     ** is the value of the token  */
};


#line 12 "smarty_internal_templateparser.y"
class Smarty_Internal_Templateparser#line 79 "smarty_internal_templateparser.php"
{
#line 14 "smarty_internal_templateparser.y"

    const Err1 = "Security error: Call to private object member not allowed";
    const Err2 = "Security error: Call to dynamic object member not allowed";
    const Err3 = "PHP in template not allowed. Use SmartyBC to enable it";
    // states whether the parse was successful or not
    public $successful = true;
    public $retvalue = 0;
    private $lex;
    private $internalError = false;
    private $last_taglineno = 0;
    private $last_taglineno_nocache = 0;
    private $strip = false;

    function __construct($lex, $compiler) {
        $this->lex = $lex;
        $this->compiler = $compiler;
        $this->smarty = $this->compiler->smarty;
        $this->template = $this->compiler->template;
        $this->compiler->has_variable_string = false;
        $this->compiler->prefix_code = array();
        $this->prefix_number = 0;
        $this->block_nesting_level = 0;
        if ($this->security = isset($this->smarty->security_policy)) {
            $this->php_handling = $this->smarty->security_policy->php_handling;
        } else {
            $this->php_handling = $this->smarty->php_handling;
        }
        $this->is_xml = false;
        $this->asp_tags = (ini_get('asp_tags') != '0');
        $this->current_buffer = $this->root_buffer = new _smarty_template_buffer($this);
    }

    public static function escape_start_tag($tag_text) {
        $tag = preg_replace('/\A<\?(.*)\z/', '<<?php ?>?\1', $tag_text, -1 , $count); //Escape tag
        return $tag;
    }

    public static function escape_end_tag($tag_text) {
        return '?<?php ?>>';
    }

    public function compileVariable($variable) {
    	 if (strpos($variable,'(') === false) {
    	 		// not a variable variable
    	 		$var = trim($variable,'\'"');
			    $this->compiler->tag_nocache=$this->compiler->tag_nocache|$this->template->getVariable($var, null, true, false, 'nocache');
//			    $this->template->properties['variables'][$var] = $this->compiler->tag_nocache|$this->compiler->nocache;
			 } else {
			    $var = '{'.$variable.'}';
			 }
			 return '$_smarty_tpl->tpl_vars->'. $var . "['value']";
    }

    public function updateNocacheLineTrace($allways = false) {
       if ($this->smarty->enable_traceback) {
           if ($this->compiler->template->caching && $this->last_taglineno_nocache != $this->lex->taglineno) {
               $this->compiler->has_code = true;
               $this->compiler->nocache_nolog = true;
               $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>", true)));
               $this->last_taglineno_nocache = $this->lex->taglineno;
           } elseif ($allways && $this->last_taglineno != $this->lex->taglineno) {
               $this->compiler->has_code = true;
               $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>", true)));
               $this->last_taglineno = $this->lex->taglineno;
           }
       }
    }
#line 150 "smarty_internal_templateparser.php"

    const TP_VERT                           =  1;
    const TP_COLON                          =  2;
    const TP_TEMPLATEINIT                   =  3;
    const TP_LDEL                           =  4;
    const TP_COMMENT                        =  5;
    const TP_RDEL                           =  6;
    const TP_PHPSTARTTAG                    =  7;
    const TP_PHPENDTAG                      =  8;
    const TP_ASPSTARTTAG                    =  9;
    const TP_ASPENDTAG                      = 10;
    const TP_FAKEPHPSTARTTAG                = 11;
    const TP_XMLTAG                         = 12;
    const TP_TEXT                           = 13;
    const TP_STRIPON                        = 14;
    const TP_STRIPOFF                       = 15;
    const TP_LITERALSTART                   = 16;
    const TP_LITERALEND                     = 17;
    const TP_LITERAL                        = 18;
    const TP_DOLLAR                         = 19;
    const TP_ID                             = 20;
    const TP_EQUAL                          = 21;
    const TP_PTR                            = 22;
    const TP_LDELIF                         = 23;
    const TP_LDELFOR                        = 24;
    const TP_SEMICOLON                      = 25;
    const TP_IDINCDEC                       = 26;
    const TP_TO                             = 27;
    const TP_STEP                           = 28;
    const TP_LDELFOREACH                    = 29;
    const TP_SPACE                          = 30;
    const TP_AS                             = 31;
    const TP_APTR                           = 32;
    const TP_LDELSETFILTER                  = 33;
    const TP_SMARTYBLOCKCHILD               = 34;
    const TP_LDELSLASH                      = 35;
    const TP_ATTR                           = 36;
    const TP_INTEGER                        = 37;
    const TP_COMMA                          = 38;
    const TP_OPENP                          = 39;
    const TP_CLOSEP                         = 40;
    const TP_MATH                           = 41;
    const TP_UNIMATH                        = 42;
    const TP_ANDSYM                         = 43;
    const TP_ISIN                           = 44;
    const TP_ISDIVBY                        = 45;
    const TP_ISNOTDIVBY                     = 46;
    const TP_ISEVEN                         = 47;
    const TP_ISNOTEVEN                      = 48;
    const TP_ISEVENBY                       = 49;
    const TP_ISNOTEVENBY                    = 50;
    const TP_ISODD                          = 51;
    const TP_ISNOTODD                       = 52;
    const TP_ISODDBY                        = 53;
    const TP_ISNOTODDBY                     = 54;
    const TP_INSTANCEOF                     = 55;
    const TP_NAMESPACE                      = 56;
    const TP_QMARK                          = 57;
    const TP_NOT                            = 58;
    const TP_TYPECAST                       = 59;
    const TP_HEX                            = 60;
    const TP_DOT                            = 61;
    const TP_SINGLEQUOTESTRING              = 62;
    const TP_DOUBLECOLON                    = 63;
    const TP_AT                             = 64;
    const TP_HATCH                          = 65;
    const TP_OPENB                          = 66;
    const TP_CLOSEB                         = 67;
    const TP_EQUALS                         = 68;
    const TP_NOTEQUALS                      = 69;
    const TP_GREATERTHAN                    = 70;
    const TP_LESSTHAN                       = 71;
    const TP_GREATEREQUAL                   = 72;
    const TP_LESSEQUAL                      = 73;
    const TP_IDENTITY                       = 74;
    const TP_NONEIDENTITY                   = 75;
    const TP_MOD                            = 76;
    const TP_LAND                           = 77;
    const TP_LOR                            = 78;
    const TP_LXOR                           = 79;
    const TP_QUOTE                          = 80;
    const TP_BACKTICK                       = 81;
    const TP_DOLLARID                       = 82;
    const YY_NO_ACTION = 612;
    const YY_ACCEPT_ACTION = 611;
    const YY_ERROR_ACTION = 610;

    const YY_SZ_ACTTAB = 2714;
static public $yy_action = array(
 /*     0 */   229,  290,  148,  304,  203,  166,  342,  120,  334,  146,
 /*    10 */    88,  128,  309,  340,  207,  321,   41,   26,  305,  400,
 /*    20 */   205,  321,  314,  326,  323,   29,  396,   42,  229,   29,
 /*    30 */   212,   44,   29,  472,  177,   44,  223,  372,   44,  196,
 /*    40 */    50,   53,   54,   47,   18,   27,  353,  385,   30,   34,
 /*    50 */   386,  387,   28,   36,  229,  229,  229,  472,  245,  392,
 /*    60 */   472,  469,   46,  472,    3,  212,  342,  388,  384,  383,
 /*    70 */   379,  380,  381,  382,  389,  390,  397,  398,  399,  336,
 /*    80 */   338,  265,   51,   29,  472,  469,  232,   23,  147,   44,
 /*    90 */   472,  469,  369,   44,   50,   53,   54,   47,   18,   27,
 /*   100 */   353,  385,   30,   34,  386,  387,   28,   36,  229,   51,
 /*   110 */    51,  229,  229,  331,  229,  341,  335,  466,  202,  344,
 /*   120 */   352,  388,  384,  383,  379,  380,  381,  382,  389,  390,
 /*   130 */   397,  398,  399,  229,   32,  254,  283,   29,  393,   29,
 /*   140 */    29,   29,    3,   44,  212,   44,   44,   44,   50,   53,
 /*   150 */    54,   47,   18,   27,  353,  385,   30,   34,  386,  387,
 /*   160 */    28,   36,  229,  229,  286,   51,  147,  394,  611,   97,
 /*   170 */   275,  338,  265,   21,  239,  388,  384,  383,  379,  380,
 /*   180 */   381,  382,  389,  390,  397,  398,  399,   51,   29,  351,
 /*   190 */    37,   29,   29,   19,   44,  108,  216,   44,   44,   20,
 /*   200 */   177,    9,   50,   53,   54,   47,   18,   27,  353,  385,
 /*   210 */    30,   34,  386,  387,   28,   36,  229,  268,  270,  278,
 /*   220 */   272,  266,  229,    7,  391,    8,  197,  289,  279,  388,
 /*   230 */   384,  383,  379,  380,  381,  382,  389,  390,  397,  398,
 /*   240 */   399,  127,  233,  251,  230,   29,  101,  161,   29,  125,
 /*   250 */   229,   44,  375,   25,   44,  340,   50,   53,   54,   47,
 /*   260 */    18,   27,  353,  385,   30,   34,  386,  387,   28,   36,
 /*   270 */   229,  284,  212,  106,  165,  216,   51,  193,  377,  348,
 /*   280 */     9,   38,  340,  388,  384,  383,  379,  380,  381,  382,
 /*   290 */   389,  390,  397,  398,  399,   29,  135,  192,   45,  212,
 /*   300 */   236,   44,   29,   29,   51,    3,  349,  140,   44,   44,
 /*   310 */    50,   53,   54,   47,   18,   27,  353,  385,   30,   34,
 /*   320 */   386,  387,   28,   36,  229,  105,  172,  126,  361,  147,
 /*   330 */    29,  378,  363,   32,  340,  298,   44,  388,  384,  383,
 /*   340 */   379,  380,  381,  382,  389,  390,  397,  398,  399,  229,
 /*   350 */   366,  212,   29,   11,  346,   29,   29,  206,   44,  364,
 /*   360 */   201,   44,   44,  253,   50,   53,   54,   47,   18,   27,
 /*   370 */   353,  385,   30,   34,  386,  387,   28,   36,  229,  395,
 /*   380 */   274,  273,  360,   29,  299,  111,  374,  107,    6,   44,
 /*   390 */   195,  388,  384,  383,  379,  380,  381,  382,  389,  390,
 /*   400 */   397,  398,  399,   29,   29,   29,   29,  359,   29,   44,
 /*   410 */    44,   44,   44,  332,   44,   35,  177,  280,   50,   53,
 /*   420 */    54,   47,   18,   27,  353,  385,   30,   34,  386,  387,
 /*   430 */    28,   36,  229,  164,  160,  229,  176,   29,  333,   14,
 /*   440 */   345,  340,  340,   44,  340,  388,  384,  383,  379,  380,
 /*   450 */   381,  382,  389,  390,  397,  398,  399,  127,  209,  209,
 /*   460 */   306,  209,   29,  180,  536,  229,   46,  152,   44,  536,
 /*   470 */   347,  340,   50,   53,   54,   47,   18,   27,  353,  385,
 /*   480 */    30,   34,  386,  387,   28,   36,  229,  229,  209,  285,
 /*   490 */   281,  313,   32,   32,  277,  371,  132,  255,  368,  388,
 /*   500 */   384,  383,  379,  380,  381,  382,  389,  390,  397,  398,
 /*   510 */   399,  199,  200,   29,   29,  190,  129,  350,  183,   44,
 /*   520 */    44,  189,  328,  198,  321,  144,  340,   50,   53,   54,
 /*   530 */    47,   18,   27,  353,  385,   30,   34,  386,  387,   28,
 /*   540 */    36,  229,  109,  240,  258,  318,  264,  212,  184,   31,
 /*   550 */   247,   21,  152,  119,  388,  384,  383,  379,  380,  381,
 /*   560 */   382,  389,  390,  397,  398,  399,  248,  351,   17,  320,
 /*   570 */   229,  233,  242,   29,  212,  312,  152,  233,  301,   44,
 /*   580 */    12,   50,   53,   54,   47,   18,   27,  353,  385,   30,
 /*   590 */    34,  386,  387,   28,   36,  229,  162,  366,  167,  194,
 /*   600 */   210,  350,  302,  185,  340,   21,  340,   13,  388,  384,
 /*   610 */   383,  379,  380,  381,  382,  389,  390,  397,  398,  399,
 /*   620 */   247,  351,  296,  130,  295,  310,  211,  239,  186,    6,
 /*   630 */   329,  370,  311,  356,  358,   50,   53,   54,   47,   18,
 /*   640 */    27,  353,  385,   30,   34,  386,  387,   28,   36,  229,
 /*   650 */   134,   35,   96,  133,  291,  307,  204,  137,  339,  308,
 /*   660 */    99,  123,  388,  384,  383,  379,  380,  381,  382,  389,
 /*   670 */   390,  397,  398,  399,  317,  317,  316,  271,  237,    5,
 /*   680 */   330,   39,  229,  367,  209,  188,  187,  287,  309,   50,
 /*   690 */    53,   54,   47,   18,   27,  353,  385,   30,   34,  386,
 /*   700 */   387,   28,   36,  229,  350,  221,  112,  191,  293,  334,
 /*   710 */   334,  334,  334,  334,  181,  145,  388,  384,  383,  379,
 /*   720 */   380,  381,  382,  389,  390,  397,  398,  399,  317,  317,
 /*   730 */   334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
 /*   740 */   334,  334,  334,   50,   53,   54,   47,   18,   27,  353,
 /*   750 */   385,   30,   34,  386,  387,   28,   36,  229,  334,  334,
 /*   760 */   334,  334,  208,  334,  334,  334,  334,  334,  103,  334,
 /*   770 */   388,  384,  383,  379,  380,  381,  382,  389,  390,  397,
 /*   780 */   398,  399,  317,  357,  334,  334,  334,  334,  334,  334,
 /*   790 */   334,  334,  334,  334,  334,  177,  334,   50,   53,   54,
 /*   800 */    47,   18,   27,  353,  385,   30,   34,  386,  387,   28,
 /*   810 */    36,  229,   43,  334,  334,  334,  334,  334,  334,  334,
 /*   820 */   334,  334,  334,  100,  388,  384,  383,  379,  380,  381,
 /*   830 */   382,  389,  390,  397,  398,  399,  127,  317,  334,  334,
 /*   840 */   334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
 /*   850 */   334,   50,   53,   54,   47,   18,   27,  353,  385,   30,
 /*   860 */    34,  386,  387,   28,   36,  229,  334,  334,  334,  334,
 /*   870 */   334,  334,  334,  334,  334,  334,  104,  179,  388,  384,
 /*   880 */   383,  379,  380,  381,  382,  389,  390,  397,  398,  399,
 /*   890 */   317,  317,  334,  334,  334,  334,  334,  334,  334,  334,
 /*   900 */   334,  334,  334,  334,  334,   50,   53,   54,   47,   18,
 /*   910 */    27,  353,  385,   30,   34,  386,  387,   28,   36,  334,
 /*   920 */   334,  334,  334,  334,  334,  334,  334,  334,  334,  177,
 /*   930 */   116,  334,  388,  384,  383,  379,  380,  381,  382,  389,
 /*   940 */   390,  397,  398,  399,  317,   21,   21,   50,   53,   54,
 /*   950 */    47,   18,   27,  353,  385,   30,   34,  386,  387,   28,
 /*   960 */    36,  256,  219,  334,  334,  334,  334,  334,  216,  334,
 /*   970 */   334,  334,  334,    9,  388,  384,  383,  379,  380,  381,
 /*   980 */   382,  389,  390,  397,  398,  399,   40,  243,   21,  122,
 /*   990 */   334,  334,  334,   21,  334,  334,  334,  334,  334,  334,
 /*  1000 */   203,  131,   94,  317,  351,    2,  110,  149,  322,  351,
 /*  1010 */    37,  136,   41,   26,   29,  262,  343,  249,  257,  252,
 /*  1020 */    44,   16,  396,  334,   49,  334,  212,  334,  334,  173,
 /*  1030 */   334,  304,  334,  334,  334,  155,  334,  340,  218,  128,
 /*  1040 */    48,   52,  315,  259,  327,   40,  334,  109,    1,  350,
 /*  1050 */   314,  326,  323,  246,  396,   21,   21,  334,  334,  334,
 /*  1060 */   142,  215,   98,  334,    2,  110,  334,  322,  334,   21,
 /*  1070 */   136,  351,  351,  304,  262,  343,  249,  159,  252,   21,
 /*  1080 */    16,  128,   29,   49,  234,  241,  334,  334,   44,  288,
 /*  1090 */   334,  334,  314,  326,  323,  263,  396,  218,  334,   48,
 /*  1100 */    52,  315,  259,  327,   40,  169,  109,    1,  401,  229,
 /*  1110 */   334,  334,  334,  340,  362,  246,  334,  334,  334,  142,
 /*  1120 */   224,   98,  334,    2,  110,  350,  322,  334,  334,  136,
 /*  1130 */   261,  334,  304,  262,  343,  249,  153,  252,   29,   16,
 /*  1140 */   128,   21,   49,  334,   44,  334,  334,    3,  319,  334,
 /*  1150 */   334,  314,  326,  323,  334,  396,  218,  351,   48,   52,
 /*  1160 */   315,  259,  327,   40,  334,  109,    1,   29,   21,  260,
 /*  1170 */   334,  147,  334,   44,   33,  334,  334,  334,  131,   94,
 /*  1180 */    98,  334,    2,  110,  351,  322,  334,  334,  136,  138,
 /*  1190 */   324,  304,  262,  343,  249,  151,  252,  334,   16,  128,
 /*  1200 */   334,   49,  334,  334,  334,  334,  334,  325,  334,  334,
 /*  1210 */   314,  326,  323,  334,  396,  218,  334,   48,   52,  315,
 /*  1220 */   259,  327,   40,  163,  109,    1,  171,  334,  244,  334,
 /*  1230 */   334,  340,  334,  334,  340,  334,  334,  132,  224,   98,
 /*  1240 */   334,    2,  110,  350,  322,  334,  350,  136,  334,  334,
 /*  1250 */   304,  262,  343,  249,  156,  252,  334,   15,  128,  334,
 /*  1260 */    49,  334,  334,  334,  334,  334,  334,  334,  334,  314,
 /*  1270 */   326,  323,  334,  396,  218,  334,   48,   52,  315,  259,
 /*  1280 */   327,   40,  334,  109,    1,  334,  334,  334,  334,  334,
 /*  1290 */   334,  334,  334,  334,  334,  334,  142,  217,   98,  334,
 /*  1300 */     2,  110,  334,  322,  334,  334,  136,  334,  334,  304,
 /*  1310 */   262,  343,  249,  158,  252,  334,   16,  128,  334,   49,
 /*  1320 */   334,  334,  334,  334,  334,  334,  334,  334,  314,  326,
 /*  1330 */   323,  334,  396,  218,  334,   48,   52,  315,  259,  327,
 /*  1340 */    40,  334,  109,    1,  334,  334,  334,  334,  334,  334,
 /*  1350 */   334,  334,  334,  334,  334,  139,  224,   98,  334,    2,
 /*  1360 */   110,  334,  322,  334,  334,  136,  334,  334,  304,  262,
 /*  1370 */   343,  249,  150,  252,  334,   16,  128,  334,   49,  334,
 /*  1380 */   334,  334,  334,  334,  334,  334,  334,  314,  326,  323,
 /*  1390 */   334,  396,  218,  334,   48,   52,  315,  259,  327,   40,
 /*  1400 */   334,  109,    1,  334,  334,  334,  334,  334,  334,  334,
 /*  1410 */   334,  334,  334,  334,  142,  214,   98,  334,    2,  110,
 /*  1420 */   334,  322,  334,  334,  136,  334,  334,  304,  262,  343,
 /*  1430 */   249,  154,  231,  334,   16,  128,  334,   49,  334,  334,
 /*  1440 */   334,  334,  334,  334,  334,  334,  314,  326,  323,  334,
 /*  1450 */   396,  218,  334,   48,   52,  315,  259,  327,   40,  334,
 /*  1460 */   109,    1,  334,  334,  334,  334,  334,  334,  334,  334,
 /*  1470 */   334,  334,  334,  142,  213,   98,  334,    2,  110,  334,
 /*  1480 */   322,  334,  334,  136,  334,  334,  304,  262,  343,  249,
 /*  1490 */   157,  252,  334,   16,  128,  334,   49,  334,  334,  334,
 /*  1500 */   334,  334,  334,  334,  334,  314,  326,  323,  334,  396,
 /*  1510 */   218,  334,   48,   52,  315,  259,  327,   40,  334,  109,
 /*  1520 */     1,  334,  334,  334,  334,  334,  334,  334,  334,  334,
 /*  1530 */   334,  334,  141,  224,   98,  334,    2,  110,  334,  322,
 /*  1540 */   334,  334,  136,  334,  203,  175,  262,  343,  249,  334,
 /*  1550 */   252,  334,    4,  340,  334,   49,   41,   26,  334,  334,
 /*  1560 */   334,  334,  334,  334,  334,  334,  334,  334,  334,  218,
 /*  1570 */   212,   48,   52,  315,  259,  327,   40,  334,  109,    1,
 /*  1580 */   334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
 /*  1590 */   334,  132,  224,   98,  334,    2,  110,  334,  322,  334,
 /*  1600 */   334,  136,  334,  102,  168,  262,  343,  249,  334,  252,
 /*  1610 */   334,   15,  340,  334,   49,   41,   26,  334,  334,  334,
 /*  1620 */   334,  334,  334,  334,  334,  334,  334,  334,  218,  212,
 /*  1630 */    48,   52,  315,  259,  327,   40,  334,  109,  334,  334,
 /*  1640 */   334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
 /*  1650 */   132,  222,   98,  334,    2,  110,  334,  322,  334,  334,
 /*  1660 */   136,  334,  203,  182,  262,  343,  249,  334,  252,  334,
 /*  1670 */    15,  340,  334,   49,   41,   26,  334,  334,  334,  334,
 /*  1680 */   334,  334,  334,  334,  334,  334,  334,  226,  212,   48,
 /*  1690 */    52,  315,  259,  327,  337,   10,  109,  334,  269,  282,
 /*  1700 */   294,  300,  292,  297,  303,  267,  276,  197,  515,  203,
 /*  1710 */   170,   98,  334,  334,    2,  110,  334,  334,  340,  334,
 /*  1720 */   136,   41,   26,  334,  262,  343,  249,  515,  334,  515,
 /*  1730 */   515,  470,  515,  515,  334,  212,  334,  334,  515,  334,
 /*  1740 */   515,    3,  515,   22,  334,  334,  250,  334,  334,  334,
 /*  1750 */   334,  334,  373,  334,  334,  470,  334,  515,  334,  334,
 /*  1760 */   334,  470,    2,  110,    3,  147,  334,  334,  136,  515,
 /*  1770 */   334,  334,  262,  343,  249,  334,  334,  304,  334,  334,
 /*  1780 */   334,  143,  334,  515,   85,  128,   22,  334,  147,  334,
 /*  1790 */   334,  334,  305,  400,  334,  373,  314,  326,  323,  334,
 /*  1800 */   396,  203,  174,  334,  334,    2,  110,  220,  334,  334,
 /*  1810 */   340,  136,  334,   41,   26,  262,  343,  249,  304,  354,
 /*  1820 */    24,  365,  143,  334,  334,   85,  128,  212,  334,  334,
 /*  1830 */   334,  334,  334,  305,  400,  334,  334,  314,  326,  323,
 /*  1840 */   334,  396,  334,  334,  334,  334,  334,  334,  225,  334,
 /*  1850 */   304,  334,  334,  334,  143,  334,  334,   70,  118,  242,
 /*  1860 */   334,  334,  355,   24,  365,  305,  400,  334,  334,  314,
 /*  1870 */   326,  323,  304,  396,  334,  334,  143,  334,  334,   56,
 /*  1880 */   118,  117,  334,  334,  334,  334,  334,  305,  400,  334,
 /*  1890 */   334,  314,  326,  323,  304,  396,  334,  334,  143,  334,
 /*  1900 */   334,   85,  128,  334,  334,  334,  334,  203,  178,  305,
 /*  1910 */   400,  334,  334,  314,  326,  323,  340,  396,  334,   41,
 /*  1920 */    26,  304,  334,  334,  228,  120,  334,  334,   88,  128,
 /*  1930 */   334,  334,  334,  212,  334,  334,  305,  400,  334,  334,
 /*  1940 */   314,  326,  323,  334,  396,  304,  334,  334,  334,  143,
 /*  1950 */   334,  334,   85,  128,  334,  376,  334,  334,  334,  334,
 /*  1960 */   305,  400,  334,  334,  314,  326,  323,  334,  396,  304,
 /*  1970 */   334,  334,  334,  143,  334,  227,   65,  128,  334,  304,
 /*  1980 */   334,  334,  334,  115,  305,  400,   77,  128,  314,  326,
 /*  1990 */   323,  334,  396,  334,  305,  400,  334,  304,  314,  326,
 /*  2000 */   323,  143,  396,  334,   78,  128,  334,  334,  334,  334,
 /*  2010 */   334,  334,  305,  400,  334,  334,  314,  326,  323,  334,
 /*  2020 */   396,  334,  334,  334,  304,  334,  334,  334,  143,  334,
 /*  2030 */   334,   67,  128,  334,  334,  334,  334,  334,  334,  305,
 /*  2040 */   400,  334,  334,  314,  326,  323,  334,  396,  304,  334,
 /*  2050 */   334,  334,  143,  334,  334,   70,  128,  334,  334,  334,
 /*  2060 */   334,  334,  334,  305,  400,  334,  334,  314,  326,  323,
 /*  2070 */   334,  396,  304,  334,  334,  334,  143,  334,  334,   75,
 /*  2080 */   128,  334,  304,  334,  334,  334,  143,  305,  400,   71,
 /*  2090 */   128,  314,  326,  323,  334,  396,  334,  305,  400,  334,
 /*  2100 */   304,  314,  326,  323,  143,  396,  334,   72,  128,  334,
 /*  2110 */   334,  334,  334,  334,  334,  305,  400,  334,  334,  314,
 /*  2120 */   326,  323,  334,  396,  334,  334,  334,  304,  334,  334,
 /*  2130 */   334,   95,  334,  334,   59,  124,  334,  334,  334,  334,
 /*  2140 */   334,  334,  305,  400,  334,  334,  314,  326,  323,  334,
 /*  2150 */   396,  304,  334,  334,  334,  143,  334,  334,   92,  128,
 /*  2160 */   334,  334,  334,  334,  334,  334,  305,  400,  334,  334,
 /*  2170 */   314,  326,  323,  334,  396,  304,  334,  334,  334,  143,
 /*  2180 */   334,  334,   61,  128,  334,  304,  334,  334,  334,  113,
 /*  2190 */   305,  400,   69,  128,  314,  326,  323,  334,  396,  334,
 /*  2200 */   305,  400,  334,  304,  314,  326,  323,  143,  396,  334,
 /*  2210 */    68,  128,  334,  334,  334,  334,  334,  334,  305,  400,
 /*  2220 */   334,  334,  314,  326,  323,  334,  396,  334,  334,  334,
 /*  2230 */   304,  334,  334,  334,  143,  334,  334,   64,  128,  334,
 /*  2240 */   334,  334,  334,  334,  334,  305,  400,  334,  334,  238,
 /*  2250 */   326,  323,  334,  396,  304,  334,  334,  334,  143,  334,
 /*  2260 */   334,   80,  128,  334,  334,  334,  334,  334,  334,  305,
 /*  2270 */   400,  334,  334,  314,  326,  323,  334,  396,  304,  334,
 /*  2280 */   334,  334,  143,  334,  334,   81,  128,  334,  304,  334,
 /*  2290 */   334,  334,  114,  305,  400,   86,  128,  314,  326,  323,
 /*  2300 */   334,  396,  334,  305,  400,  334,  304,  314,  326,  323,
 /*  2310 */   143,  396,  334,   93,  128,  334,  334,  334,  334,  334,
 /*  2320 */   334,  305,  400,  334,  334,  314,  326,  323,  334,  396,
 /*  2330 */   334,  334,  334,  304,  334,  334,  334,   95,  334,  334,
 /*  2340 */    57,  124,  334,  334,  334,  334,  334,  334,  305,  400,
 /*  2350 */   334,  334,  235,  326,  323,  334,  396,  304,  334,  334,
 /*  2360 */   334,  143,  334,  334,   60,  128,  334,  334,  334,  334,
 /*  2370 */   334,  334,  305,  400,  334,  334,  314,  326,  323,  334,
 /*  2380 */   396,  304,  334,  334,  334,  143,  334,  334,   73,  128,
 /*  2390 */   334,  304,  334,  334,  334,  143,  305,  400,   84,  128,
 /*  2400 */   314,  326,  323,  334,  396,  334,  305,  400,  334,  304,
 /*  2410 */   314,  326,  323,  143,  396,  334,   90,  128,  334,  334,
 /*  2420 */   334,  334,  334,  334,  305,  400,  334,  334,  314,  326,
 /*  2430 */   323,  334,  396,  334,  334,  334,  304,  334,  334,  334,
 /*  2440 */   143,  334,  334,   79,  128,  334,  334,  334,  334,  334,
 /*  2450 */   334,  305,  400,  334,  334,  314,  326,  323,  334,  396,
 /*  2460 */   304,  334,  334,  334,  143,  334,  334,   87,  128,  334,
 /*  2470 */   334,  334,  334,  334,  334,  305,  400,  334,  334,  314,
 /*  2480 */   326,  323,  334,  396,  304,  334,  334,  334,  143,  334,
 /*  2490 */   334,   66,  128,  334,  304,  334,  334,  334,  143,  305,
 /*  2500 */   400,   82,  128,  314,  326,  323,  334,  396,  334,  305,
 /*  2510 */   400,  334,  304,  314,  326,  323,  143,  396,  334,   91,
 /*  2520 */   128,  334,  334,  334,  334,  334,  334,  305,  400,  334,
 /*  2530 */   334,  314,  326,  323,  334,  396,  334,  334,  334,  304,
 /*  2540 */   334,  334,  334,  143,  334,  334,   76,  128,  334,  334,
 /*  2550 */   334,  334,  334,  334,  305,  400,  334,  334,  314,  326,
 /*  2560 */   323,  334,  396,  304,  334,  334,  334,  143,  334,  334,
 /*  2570 */    58,  128,  334,  334,  334,  334,  334,  334,  305,  400,
 /*  2580 */   334,  334,  314,  326,  323,  334,  396,  304,  334,  334,
 /*  2590 */   334,  143,  334,  334,   83,  128,  334,  304,  334,  334,
 /*  2600 */   334,  143,  305,  400,   74,  128,  314,  326,  323,  334,
 /*  2610 */   396,  334,  305,  400,  334,  304,  314,  326,  323,  143,
 /*  2620 */   396,  334,   63,  128,  334,  334,  334,  334,  334,  334,
 /*  2630 */   305,  400,  334,  334,  314,  326,  323,  334,  396,  334,
 /*  2640 */   334,  334,  304,  334,  334,  334,  143,  334,  334,   89,
 /*  2650 */   128,  334,  334,  334,  334,  334,  334,  305,  400,  334,
 /*  2660 */   334,  314,  326,  323,  334,  396,  304,  334,  334,  334,
 /*  2670 */   143,  334,  334,   62,  128,  334,  334,  334,  334,  334,
 /*  2680 */   334,  305,  400,  334,  334,  314,  326,  323,  334,  396,
 /*  2690 */   304,  334,  334,  334,  121,  334,  334,   55,  128,  334,
 /*  2700 */   334,  334,  334,  334,  334,  305,  400,  334,  334,  314,
 /*  2710 */   326,  323,  334,  396,
    );
    static public $yy_lookahead = array(
 /*     0 */     1,    6,   19,   87,   92,   93,  119,   91,    6,   26,
 /*    10 */    94,   95,  112,  101,  114,  115,  104,  105,  102,  103,
 /*    20 */   114,  115,  106,  107,  108,   30,  110,   28,    1,   30,
 /*    30 */   118,   36,   30,    6,   22,   36,  120,  121,   36,   92,
 /*    40 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*    50 */    51,   52,   53,   54,    1,    1,    1,   30,   31,    6,
 /*    60 */     6,    6,    2,   36,   39,  118,  119,   68,   69,   70,
 /*    70 */    71,   72,   73,   74,   75,   76,   77,   78,   79,   86,
 /*    80 */    87,   88,   55,   30,   30,   30,   61,   30,   63,   36,
 /*    90 */    36,   36,   67,   36,   41,   42,   43,   44,   45,   46,
 /*   100 */    47,   48,   49,   50,   51,   52,   53,   54,    1,   55,
 /*   110 */    55,    1,    1,    6,    1,    6,    6,    6,   92,    6,
 /*   120 */   115,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   130 */    77,   78,   79,    1,   38,   22,   40,   30,    6,   30,
 /*   140 */    30,   30,   39,   36,  118,   36,   36,   36,   41,   42,
 /*   150 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   160 */    53,   54,    1,    1,    6,   55,   63,    6,   84,   85,
 /*   170 */    86,   87,   88,    4,    2,   68,   69,   70,   71,   72,
 /*   180 */    73,   74,   75,   76,   77,   78,   79,   55,   30,   20,
 /*   190 */    21,   30,   30,   21,   36,  100,   61,   36,   36,   21,
 /*   200 */    22,   66,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   210 */    49,   50,   51,   52,   53,   54,    1,    7,    8,    9,
 /*   220 */    10,   11,    1,   38,    6,   39,   16,   17,   18,   68,
 /*   230 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   240 */    79,   63,   95,   96,   97,   30,   92,   93,   30,   63,
 /*   250 */     1,   36,   67,   32,   36,  101,   41,   42,   43,   44,
 /*   260 */    45,   46,   47,   48,   49,   50,   51,   52,   53,   54,
 /*   270 */     1,    6,  118,   92,   93,   61,   55,  111,    6,    6,
 /*   280 */    66,    4,  101,   68,   69,   70,   71,   72,   73,   74,
 /*   290 */    75,   76,   77,   78,   79,   30,   19,   20,   32,  118,
 /*   300 */    31,   36,   30,   30,   55,   39,    6,   19,   36,   36,
 /*   310 */    41,   42,   43,   44,   45,   46,   47,   48,   49,   50,
 /*   320 */    51,   52,   53,   54,    1,   92,   93,   39,    6,   63,
 /*   330 */    30,    6,    6,   38,  101,   40,   36,   68,   69,   70,
 /*   340 */    71,   72,   73,   74,   75,   76,   77,   78,   79,    1,
 /*   350 */    87,  118,   30,    4,    6,   30,   30,  100,   36,    6,
 /*   360 */   100,   36,   36,   40,   41,   42,   43,   44,   45,   46,
 /*   370 */    47,   48,   49,   50,   51,   52,   53,   54,    1,    6,
 /*   380 */     6,    6,    6,   30,    6,  122,  123,  111,   39,   36,
 /*   390 */   111,   68,   69,   70,   71,   72,   73,   74,   75,   76,
 /*   400 */    77,   78,   79,   30,   30,   30,   30,    6,   30,   36,
 /*   410 */    36,   36,   36,    6,   36,   21,   22,   40,   41,   42,
 /*   420 */    43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
 /*   430 */    53,   54,    1,   93,   93,    1,   93,   30,    6,   57,
 /*   440 */     6,  101,  101,   36,  101,   68,   69,   70,   71,   72,
 /*   450 */    73,   74,   75,   76,   77,   78,   79,   63,  118,  118,
 /*   460 */   109,  118,   30,   93,   61,    1,    2,  116,   36,   66,
 /*   470 */     6,  101,   41,   42,   43,   44,   45,   46,   47,   48,
 /*   480 */    49,   50,   51,   52,   53,   54,    1,    1,  118,    6,
 /*   490 */     6,    6,   38,   38,   40,   40,   19,   20,   67,   68,
 /*   500 */    69,   70,   71,   72,   73,   74,   75,   76,   77,   78,
 /*   510 */    79,   25,   25,   30,   30,  111,   20,  113,   93,   36,
 /*   520 */    36,   92,   20,  114,  115,   38,  101,   41,   42,   43,
 /*   530 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   540 */    54,    1,   65,   19,   20,  109,    6,  118,   92,   27,
 /*   550 */    61,    4,  116,   20,   68,   69,   70,   71,   72,   73,
 /*   560 */    74,   75,   76,   77,   78,   79,   64,   20,   21,  109,
 /*   570 */     1,   95,   96,   30,  118,    6,  116,   95,   96,   36,
 /*   580 */    21,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   590 */    50,   51,   52,   53,   54,    1,   93,   87,   93,  111,
 /*   600 */     6,  113,   20,   65,  101,    4,  101,    2,   68,   69,
 /*   610 */    70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
 /*   620 */    61,   20,   88,   19,   90,   37,   20,    2,   65,   39,
 /*   630 */    20,   67,   37,  123,   81,   41,   42,   43,   44,   45,
 /*   640 */    46,   47,   48,   49,   50,   51,   52,   53,   54,    1,
 /*   650 */    19,   21,   20,   19,    6,   20,   20,   19,    6,   20,
 /*   660 */    99,   99,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   670 */    76,   77,   78,   79,  113,  113,   20,   40,   20,   39,
 /*   680 */   101,   98,    1,  116,  118,  111,  111,   30,  112,   41,
 /*   690 */    42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
 /*   700 */    52,   53,   54,    1,  113,   98,   89,  111,   17,  124,
 /*   710 */   124,  124,  124,  124,   99,   99,   68,   69,   70,   71,
 /*   720 */    72,   73,   74,   75,   76,   77,   78,   79,  113,  113,
 /*   730 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   740 */   124,  124,  124,   41,   42,   43,   44,   45,   46,   47,
 /*   750 */    48,   49,   50,   51,   52,   53,   54,    1,  124,  124,
 /*   760 */   124,  124,    6,  124,  124,  124,  124,  124,   99,  124,
 /*   770 */    68,   69,   70,   71,   72,   73,   74,   75,   76,   77,
 /*   780 */    78,   79,  113,   81,  124,  124,  124,  124,  124,  124,
 /*   790 */   124,  124,  124,  124,  124,   22,  124,   41,   42,   43,
 /*   800 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   810 */    54,    1,    2,  124,  124,  124,  124,  124,  124,  124,
 /*   820 */   124,  124,  124,   99,   68,   69,   70,   71,   72,   73,
 /*   830 */    74,   75,   76,   77,   78,   79,   63,  113,  124,  124,
 /*   840 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   850 */   124,   41,   42,   43,   44,   45,   46,   47,   48,   49,
 /*   860 */    50,   51,   52,   53,   54,    1,  124,  124,  124,  124,
 /*   870 */   124,  124,  124,  124,  124,  124,   99,   99,   68,   69,
 /*   880 */    70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
 /*   890 */   113,  113,  124,  124,  124,  124,  124,  124,  124,  124,
 /*   900 */   124,  124,  124,  124,  124,   41,   42,   43,   44,   45,
 /*   910 */    46,   47,   48,   49,   50,   51,   52,   53,   54,  124,
 /*   920 */   124,  124,  124,  124,  124,  124,  124,  124,  124,   22,
 /*   930 */    99,  124,   68,   69,   70,   71,   72,   73,   74,   75,
 /*   940 */    76,   77,   78,   79,  113,    4,    4,   41,   42,   43,
 /*   950 */    44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
 /*   960 */    54,   20,   20,  124,  124,  124,  124,  124,   61,  124,
 /*   970 */   124,  124,  124,   66,   68,   69,   70,   71,   72,   73,
 /*   980 */    74,   75,   76,   77,   78,   79,    4,    5,    4,   99,
 /*   990 */   124,  124,  124,    4,  124,  124,  124,  124,  124,  124,
 /*  1000 */    92,   19,   20,  113,   20,   23,   24,   95,   26,   20,
 /*  1010 */    21,   29,  104,  105,   30,   33,   34,   35,  106,   37,
 /*  1020 */    36,   39,  110,  124,   42,  124,  118,  124,  124,   93,
 /*  1030 */   124,   87,  124,  124,  124,   91,  124,  101,   56,   95,
 /*  1040 */    58,   59,   60,   61,   62,    4,  124,   65,   66,  113,
 /*  1050 */   106,  107,  108,   64,  110,    4,    4,  124,  124,  124,
 /*  1060 */    19,   20,   80,  124,   23,   24,  124,   26,  124,    4,
 /*  1070 */    29,   20,   20,   87,   33,   34,   35,   91,   37,    4,
 /*  1080 */    39,   95,   30,   42,   32,   20,  124,  124,   36,  103,
 /*  1090 */   124,  124,  106,  107,  108,   20,  110,   56,  124,   58,
 /*  1100 */    59,   60,   61,   62,    4,   93,   65,   66,   67,    1,
 /*  1110 */   124,  124,  124,  101,    6,   64,  124,  124,  124,   19,
 /*  1120 */    20,   80,  124,   23,   24,  113,   26,  124,  124,   29,
 /*  1130 */    22,  124,   87,   33,   34,   35,   91,   37,   30,   39,
 /*  1140 */    95,    4,   42,  124,   36,  124,  124,   39,  103,  124,
 /*  1150 */   124,  106,  107,  108,  124,  110,   56,   20,   58,   59,
 /*  1160 */    60,   61,   62,    4,  124,   65,   66,   30,    4,   32,
 /*  1170 */   124,   63,  124,   36,    4,  124,  124,  124,   19,   20,
 /*  1180 */    80,  124,   23,   24,   20,   26,  124,  124,   29,   19,
 /*  1190 */    20,   87,   33,   34,   35,   91,   37,  124,   39,   95,
 /*  1200 */   124,   42,  124,  124,  124,  124,  124,   37,  124,  124,
 /*  1210 */   106,  107,  108,  124,  110,   56,  124,   58,   59,   60,
 /*  1220 */    61,   62,    4,   93,   65,   66,   93,  124,   64,  124,
 /*  1230 */   124,  101,  124,  124,  101,  124,  124,   19,   20,   80,
 /*  1240 */   124,   23,   24,  113,   26,  124,  113,   29,  124,  124,
 /*  1250 */    87,   33,   34,   35,   91,   37,  124,   39,   95,  124,
 /*  1260 */    42,  124,  124,  124,  124,  124,  124,  124,  124,  106,
 /*  1270 */   107,  108,  124,  110,   56,  124,   58,   59,   60,   61,
 /*  1280 */    62,    4,  124,   65,   66,  124,  124,  124,  124,  124,
 /*  1290 */   124,  124,  124,  124,  124,  124,   19,   20,   80,  124,
 /*  1300 */    23,   24,  124,   26,  124,  124,   29,  124,  124,   87,
 /*  1310 */    33,   34,   35,   91,   37,  124,   39,   95,  124,   42,
 /*  1320 */   124,  124,  124,  124,  124,  124,  124,  124,  106,  107,
 /*  1330 */   108,  124,  110,   56,  124,   58,   59,   60,   61,   62,
 /*  1340 */     4,  124,   65,   66,  124,  124,  124,  124,  124,  124,
 /*  1350 */   124,  124,  124,  124,  124,   19,   20,   80,  124,   23,
 /*  1360 */    24,  124,   26,  124,  124,   29,  124,  124,   87,   33,
 /*  1370 */    34,   35,   91,   37,  124,   39,   95,  124,   42,  124,
 /*  1380 */   124,  124,  124,  124,  124,  124,  124,  106,  107,  108,
 /*  1390 */   124,  110,   56,  124,   58,   59,   60,   61,   62,    4,
 /*  1400 */   124,   65,   66,  124,  124,  124,  124,  124,  124,  124,
 /*  1410 */   124,  124,  124,  124,   19,   20,   80,  124,   23,   24,
 /*  1420 */   124,   26,  124,  124,   29,  124,  124,   87,   33,   34,
 /*  1430 */    35,   91,   37,  124,   39,   95,  124,   42,  124,  124,
 /*  1440 */   124,  124,  124,  124,  124,  124,  106,  107,  108,  124,
 /*  1450 */   110,   56,  124,   58,   59,   60,   61,   62,    4,  124,
 /*  1460 */    65,   66,  124,  124,  124,  124,  124,  124,  124,  124,
 /*  1470 */   124,  124,  124,   19,   20,   80,  124,   23,   24,  124,
 /*  1480 */    26,  124,  124,   29,  124,  124,   87,   33,   34,   35,
 /*  1490 */    91,   37,  124,   39,   95,  124,   42,  124,  124,  124,
 /*  1500 */   124,  124,  124,  124,  124,  106,  107,  108,  124,  110,
 /*  1510 */    56,  124,   58,   59,   60,   61,   62,    4,  124,   65,
 /*  1520 */    66,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*  1530 */   124,  124,   19,   20,   80,  124,   23,   24,  124,   26,
 /*  1540 */   124,  124,   29,  124,   92,   93,   33,   34,   35,  124,
 /*  1550 */    37,  124,   39,  101,  124,   42,  104,  105,  124,  124,
 /*  1560 */   124,  124,  124,  124,  124,  124,  124,  124,  124,   56,
 /*  1570 */   118,   58,   59,   60,   61,   62,    4,  124,   65,   66,
 /*  1580 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*  1590 */   124,   19,   20,   80,  124,   23,   24,  124,   26,  124,
 /*  1600 */   124,   29,  124,   92,   93,   33,   34,   35,  124,   37,
 /*  1610 */   124,   39,  101,  124,   42,  104,  105,  124,  124,  124,
 /*  1620 */   124,  124,  124,  124,  124,  124,  124,  124,   56,  118,
 /*  1630 */    58,   59,   60,   61,   62,    4,  124,   65,  124,  124,
 /*  1640 */   124,  124,  124,  124,  124,  124,  124,  124,  124,  124,
 /*  1650 */    19,   20,   80,  124,   23,   24,  124,   26,  124,  124,
 /*  1660 */    29,  124,   92,   93,   33,   34,   35,  124,   37,  124,
 /*  1670 */    39,  101,  124,   42,  104,  105,  124,  124,  124,  124,
 /*  1680 */   124,  124,  124,  124,  124,  124,  124,   56,  118,   58,
 /*  1690 */    59,   60,   61,   62,    3,    4,   65,  124,    7,    8,
 /*  1700 */     9,   10,   11,   12,   13,   14,   15,   16,    6,   92,
 /*  1710 */    93,   80,  124,  124,   23,   24,  124,  124,  101,  124,
 /*  1720 */    29,  104,  105,  124,   33,   34,   35,   25,  124,   27,
 /*  1730 */    28,    6,   30,   31,  124,  118,  124,  124,   36,  124,
 /*  1740 */    38,   39,   40,    4,  124,  124,   21,  124,  124,  124,
 /*  1750 */   124,  124,   13,  124,  124,   30,  124,   55,  124,  124,
 /*  1760 */   124,   36,   23,   24,   39,   63,  124,  124,   29,   67,
 /*  1770 */   124,  124,   33,   34,   35,  124,  124,   87,  124,  124,
 /*  1780 */   124,   91,  124,   81,   94,   95,    4,  124,   63,  124,
 /*  1790 */   124,  124,  102,  103,  124,   13,  106,  107,  108,  124,
 /*  1800 */   110,   92,   93,  124,  124,   23,   24,  117,  124,  124,
 /*  1810 */   101,   29,  124,  104,  105,   33,   34,   35,   87,   80,
 /*  1820 */    81,   82,   91,  124,  124,   94,   95,  118,  124,  124,
 /*  1830 */   124,  124,  124,  102,  103,  124,  124,  106,  107,  108,
 /*  1840 */   124,  110,  124,  124,  124,  124,  124,  124,  117,  124,
 /*  1850 */    87,  124,  124,  124,   91,  124,  124,   94,   95,   96,
 /*  1860 */   124,  124,   80,   81,   82,  102,  103,  124,  124,  106,
 /*  1870 */   107,  108,   87,  110,  124,  124,   91,  124,  124,   94,
 /*  1880 */    95,   96,  124,  124,  124,  124,  124,  102,  103,  124,
 /*  1890 */   124,  106,  107,  108,   87,  110,  124,  124,   91,  124,
 /*  1900 */   124,   94,   95,  124,  124,  124,  124,   92,   93,  102,
 /*  1910 */   103,  124,  124,  106,  107,  108,  101,  110,  124,  104,
 /*  1920 */   105,   87,  124,  124,  117,   91,  124,  124,   94,   95,
 /*  1930 */   124,  124,  124,  118,  124,  124,  102,  103,  124,  124,
 /*  1940 */   106,  107,  108,  124,  110,   87,  124,  124,  124,   91,
 /*  1950 */   124,  124,   94,   95,  124,  121,  124,  124,  124,  124,
 /*  1960 */   102,  103,  124,  124,  106,  107,  108,  124,  110,   87,
 /*  1970 */   124,  124,  124,   91,  124,  117,   94,   95,  124,   87,
 /*  1980 */   124,  124,  124,   91,  102,  103,   94,   95,  106,  107,
 /*  1990 */   108,  124,  110,  124,  102,  103,  124,   87,  106,  107,
 /*  2000 */   108,   91,  110,  124,   94,   95,  124,  124,  124,  124,
 /*  2010 */   124,  124,  102,  103,  124,  124,  106,  107,  108,  124,
 /*  2020 */   110,  124,  124,  124,   87,  124,  124,  124,   91,  124,
 /*  2030 */   124,   94,   95,  124,  124,  124,  124,  124,  124,  102,
 /*  2040 */   103,  124,  124,  106,  107,  108,  124,  110,   87,  124,
 /*  2050 */   124,  124,   91,  124,  124,   94,   95,  124,  124,  124,
 /*  2060 */   124,  124,  124,  102,  103,  124,  124,  106,  107,  108,
 /*  2070 */   124,  110,   87,  124,  124,  124,   91,  124,  124,   94,
 /*  2080 */    95,  124,   87,  124,  124,  124,   91,  102,  103,   94,
 /*  2090 */    95,  106,  107,  108,  124,  110,  124,  102,  103,  124,
 /*  2100 */    87,  106,  107,  108,   91,  110,  124,   94,   95,  124,
 /*  2110 */   124,  124,  124,  124,  124,  102,  103,  124,  124,  106,
 /*  2120 */   107,  108,  124,  110,  124,  124,  124,   87,  124,  124,
 /*  2130 */   124,   91,  124,  124,   94,   95,  124,  124,  124,  124,
 /*  2140 */   124,  124,  102,  103,  124,  124,  106,  107,  108,  124,
 /*  2150 */   110,   87,  124,  124,  124,   91,  124,  124,   94,   95,
 /*  2160 */   124,  124,  124,  124,  124,  124,  102,  103,  124,  124,
 /*  2170 */   106,  107,  108,  124,  110,   87,  124,  124,  124,   91,
 /*  2180 */   124,  124,   94,   95,  124,   87,  124,  124,  124,   91,
 /*  2190 */   102,  103,   94,   95,  106,  107,  108,  124,  110,  124,
 /*  2200 */   102,  103,  124,   87,  106,  107,  108,   91,  110,  124,
 /*  2210 */    94,   95,  124,  124,  124,  124,  124,  124,  102,  103,
 /*  2220 */   124,  124,  106,  107,  108,  124,  110,  124,  124,  124,
 /*  2230 */    87,  124,  124,  124,   91,  124,  124,   94,   95,  124,
 /*  2240 */   124,  124,  124,  124,  124,  102,  103,  124,  124,  106,
 /*  2250 */   107,  108,  124,  110,   87,  124,  124,  124,   91,  124,
 /*  2260 */   124,   94,   95,  124,  124,  124,  124,  124,  124,  102,
 /*  2270 */   103,  124,  124,  106,  107,  108,  124,  110,   87,  124,
 /*  2280 */   124,  124,   91,  124,  124,   94,   95,  124,   87,  124,
 /*  2290 */   124,  124,   91,  102,  103,   94,   95,  106,  107,  108,
 /*  2300 */   124,  110,  124,  102,  103,  124,   87,  106,  107,  108,
 /*  2310 */    91,  110,  124,   94,   95,  124,  124,  124,  124,  124,
 /*  2320 */   124,  102,  103,  124,  124,  106,  107,  108,  124,  110,
 /*  2330 */   124,  124,  124,   87,  124,  124,  124,   91,  124,  124,
 /*  2340 */    94,   95,  124,  124,  124,  124,  124,  124,  102,  103,
 /*  2350 */   124,  124,  106,  107,  108,  124,  110,   87,  124,  124,
 /*  2360 */   124,   91,  124,  124,   94,   95,  124,  124,  124,  124,
 /*  2370 */   124,  124,  102,  103,  124,  124,  106,  107,  108,  124,
 /*  2380 */   110,   87,  124,  124,  124,   91,  124,  124,   94,   95,
 /*  2390 */   124,   87,  124,  124,  124,   91,  102,  103,   94,   95,
 /*  2400 */   106,  107,  108,  124,  110,  124,  102,  103,  124,   87,
 /*  2410 */   106,  107,  108,   91,  110,  124,   94,   95,  124,  124,
 /*  2420 */   124,  124,  124,  124,  102,  103,  124,  124,  106,  107,
 /*  2430 */   108,  124,  110,  124,  124,  124,   87,  124,  124,  124,
 /*  2440 */    91,  124,  124,   94,   95,  124,  124,  124,  124,  124,
 /*  2450 */   124,  102,  103,  124,  124,  106,  107,  108,  124,  110,
 /*  2460 */    87,  124,  124,  124,   91,  124,  124,   94,   95,  124,
 /*  2470 */   124,  124,  124,  124,  124,  102,  103,  124,  124,  106,
 /*  2480 */   107,  108,  124,  110,   87,  124,  124,  124,   91,  124,
 /*  2490 */   124,   94,   95,  124,   87,  124,  124,  124,   91,  102,
 /*  2500 */   103,   94,   95,  106,  107,  108,  124,  110,  124,  102,
 /*  2510 */   103,  124,   87,  106,  107,  108,   91,  110,  124,   94,
 /*  2520 */    95,  124,  124,  124,  124,  124,  124,  102,  103,  124,
 /*  2530 */   124,  106,  107,  108,  124,  110,  124,  124,  124,   87,
 /*  2540 */   124,  124,  124,   91,  124,  124,   94,   95,  124,  124,
 /*  2550 */   124,  124,  124,  124,  102,  103,  124,  124,  106,  107,
 /*  2560 */   108,  124,  110,   87,  124,  124,  124,   91,  124,  124,
 /*  2570 */    94,   95,  124,  124,  124,  124,  124,  124,  102,  103,
 /*  2580 */   124,  124,  106,  107,  108,  124,  110,   87,  124,  124,
 /*  2590 */   124,   91,  124,  124,   94,   95,  124,   87,  124,  124,
 /*  2600 */   124,   91,  102,  103,   94,   95,  106,  107,  108,  124,
 /*  2610 */   110,  124,  102,  103,  124,   87,  106,  107,  108,   91,
 /*  2620 */   110,  124,   94,   95,  124,  124,  124,  124,  124,  124,
 /*  2630 */   102,  103,  124,  124,  106,  107,  108,  124,  110,  124,
 /*  2640 */   124,  124,   87,  124,  124,  124,   91,  124,  124,   94,
 /*  2650 */    95,  124,  124,  124,  124,  124,  124,  102,  103,  124,
 /*  2660 */   124,  106,  107,  108,  124,  110,   87,  124,  124,  124,
 /*  2670 */    91,  124,  124,   94,   95,  124,  124,  124,  124,  124,
 /*  2680 */   124,  102,  103,  124,  124,  106,  107,  108,  124,  110,
 /*  2690 */    87,  124,  124,  124,   91,  124,  124,   94,   95,  124,
 /*  2700 */   124,  124,  124,  124,  124,  102,  103,  124,  124,  106,
 /*  2710 */   107,  108,  124,  110,
);
    const YY_SHIFT_USE_DFLT = -18;
    const YY_SHIFT_MAX = 263;
    static public $yy_shift_ofst = array(
 /*     0 */  1691, 1277, 1513, 1100, 1513, 1100, 1100, 1277, 1100, 1041,
 /*    10 */   982, 1100, 1100, 1454, 1336, 1100, 1100, 1100, 1100, 1100,
 /*    20 */  1100, 1100, 1159, 1395, 1100, 1100, 1100, 1100, 1100, 1395,
 /*    30 */  1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
 /*    40 */  1159, 1100, 1100, 1100, 1100, 1100, 1218, 1218, 1572, 1572,
 /*    50 */  1572, 1631, 1572, 1572, 1572,  161,  107,   53,   -1,  215,
 /*    60 */   215,  215,  215,  648,  702,  756,  540,  810,  486,  269,
 /*    70 */   323,  377,  431,  594,  864,  864,  864,  864,  864,  864,
 /*    80 */   864,  864,  864,  864,  864,  864,  864,  864,  864,  864,
 /*    90 */   864,  864,  906,  906, 1108,  110,  162, 1691, 1782, 1052,
 /*   100 */  1137,  111,  111,  984,  984,  162,  162,  907,  464,  477,
 /*   110 */   288, 1739,  210,   27,   55,   54,  989,  484,  394,  113,
 /*   120 */   221,  132,  169, 1051,  178,  524,  288,  524,  773,  569,
 /*   130 */   601,  942,  601,  601,  601, 1065,   57,  601,  601,  941,
 /*   140 */   601, 1075, 1075,  249,  288,  601,  543,  524,  601,   12,
 /*   150 */   681,  681,   12,  681,  681,  681,  681,  681,  681,  -18,
 /*   160 */   353,  374,  375,  378,  376,  326,  325,  265,  218,  158,
 /*   170 */   272,  273,  322,  300,  432,  407,    2,  277,  483,  547,
 /*   180 */   373, 1164,   -5,  109,  485,  403,  403,  135,  135,  434,
 /*   190 */   214,  214,  349,  214,  135,  135,  348,  691,   12,  657,
 /*   200 */   657,   60,  681,  681,  640,   12,   60,   12,  -18,  -18,
 /*   210 */   -18,  -18,  -18, 1702, 1725,   25, 1170,  266,  186,  172,
 /*   220 */    96,  -17,  103,  185,  103,  455,  186,  454,  295,  502,
 /*   230 */   487,  559,  658,  630,  634,  401,  631,  564,  553,  635,
 /*   240 */   636,  640,  637,  652,  656,  638,  639,  595,  610,  533,
 /*   250 */   582,  522,  489,  382,  496,  538,  605,  563,  590,  588,
 /*   260 */   604,  632,  606,  625,
);
    const YY_REDUCE_USE_DFLT = -114;
    const YY_REDUCE_MAX = 212;
    static public $yy_reduce_ofst = array(
 /*     0 */    84,  -84, 1785, 1807, 1763, 1731, 1690, 1834, 1858, 2013,
 /*    10 */  2040, 1882, 1910, 2064, 1937, 1995, 1961, 2088, 1985, 2603,
 /*    20 */  2579, 2528, 2246, 2098, 2143, 2452, 2322, 2349, 2191, 1892,
 /*    30 */  2555, 2476, 2425, 2397, 2373, 2407, 2500, 2304, 2294, 2116,
 /*    40 */  2040, 2167, 2270, 2219, 2201, 2510,  986, 1045, 1340, 1222,
 /*    50 */  1281, 1104, 1163, 1399,  944,  -88, 1452, 1511, 1815, 1511,
 /*    60 */  1570, 1709, 1617,  908,  908,  908,  908,  908,  908,  908,
 /*    70 */   908,  908,  908,  908,  908,  908,  908,  908,  908,  908,
 /*    80 */   908,  908,  908,  908,  908,  908,  908,  908,  908,  908,
 /*    90 */   908,  908,  908,  908,  233,  154,  181,   -7,  263, 1133,
 /*   100 */  1130,  343,  370, 1012,  936,  340,  341, -100,  -53,  912,
 /*   110 */   147,  510,  534,   26,   26,   26,  404,  503,  409,  429,
 /*   120 */    26,   26,  404,  404,  409,  436,  476,  460,  409,  456,
 /*   130 */   669,  562,  562,  777,  724,  616,  425,  561,  615,  562,
 /*   140 */   890,  831,  562,   26,  482,  488,  505,  351,  778,  409,
 /*   150 */    26,   26,  -94,   26,   26,   26,   26,   26,   26,   26,
 /*   160 */   579,  579,  579,  579,  579,  579,  579,  579,  579,  579,
 /*   170 */   579,  579,  579,  579,  579,  579,  579,  567,  579,  591,
 /*   180 */   579,  591,  579,  579,  566,  574,  575,  576,  576,  566,
 /*   190 */   576,  576,  596,  576,  576,  576,  566,  617,    5,  607,
 /*   200 */   583, -113,  566,  566,  276,    5, -113,    5,  279,  260,
 /*   210 */   166,   95,  257,
);
    static public $yyExpectedTokens = array(
        /* 0 */ array(3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 29, 33, 34, 35, ),
        /* 1 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 2 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 3 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 4 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 5 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 6 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 7 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 8 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 9 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 67, 80, ),
        /* 10 */ array(4, 5, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 11 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 12 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 13 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 14 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 15 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 16 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 17 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 18 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 19 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 20 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 21 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 22 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 23 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 24 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 25 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 26 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 27 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 28 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 29 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 30 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 31 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 32 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 33 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 34 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 35 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 36 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 37 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 38 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 39 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 40 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 41 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 42 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 43 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 44 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 45 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 46 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 47 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 66, 80, ),
        /* 48 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 49 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 50 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 51 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 52 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 53 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 54 */ array(4, 19, 20, 23, 24, 26, 29, 33, 34, 35, 37, 39, 42, 56, 58, 59, 60, 61, 62, 65, 80, ),
        /* 55 */ array(1, 6, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 56 */ array(1, 6, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 57 */ array(1, 6, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 58 */ array(1, 28, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 59 */ array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 60 */ array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 61 */ array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 62 */ array(1, 30, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 63 */ array(1, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 64 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, ),
        /* 65 */ array(1, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 66 */ array(1, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 67 */ array(1, 2, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 68 */ array(1, 25, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 69 */ array(1, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 70 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 71 */ array(1, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 72 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 73 */ array(1, 6, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 74 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 75 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 76 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 77 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 78 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 79 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 80 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 81 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 82 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 83 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 84 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 85 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 86 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 87 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 88 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 89 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 90 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 91 */ array(1, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 92 */ array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 93 */ array(41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, ),
        /* 94 */ array(1, 6, 22, 30, 36, 39, 63, ),
        /* 95 */ array(1, 6, 30, 36, 55, ),
        /* 96 */ array(1, 30, 36, ),
        /* 97 */ array(3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 23, 24, 29, 33, 34, 35, ),
        /* 98 */ array(4, 13, 23, 24, 29, 33, 34, 35, 80, 81, 82, ),
        /* 99 */ array(4, 20, 30, 32, 36, ),
        /* 100 */ array(4, 20, 30, 32, 36, ),
        /* 101 */ array(1, 6, 30, 36, ),
        /* 102 */ array(1, 6, 30, 36, ),
        /* 103 */ array(4, 20, 30, 36, ),
        /* 104 */ array(4, 20, 30, 36, ),
        /* 105 */ array(1, 30, 36, ),
        /* 106 */ array(1, 30, 36, ),
        /* 107 */ array(22, 61, 66, ),
        /* 108 */ array(1, 2, 6, ),
        /* 109 */ array(19, 20, 65, ),
        /* 110 */ array(19, 39, ),
        /* 111 */ array(4, 13, 23, 24, 29, 33, 34, 35, 80, 81, 82, ),
        /* 112 */ array(7, 8, 9, 10, 11, 16, 17, 18, ),
        /* 113 */ array(1, 6, 30, 31, 36, 55, ),
        /* 114 */ array(1, 6, 30, 36, 55, ),
        /* 115 */ array(1, 6, 30, 36, 55, ),
        /* 116 */ array(4, 20, 21, 64, ),
        /* 117 */ array(6, 30, 36, ),
        /* 118 */ array(21, 22, 63, ),
        /* 119 */ array(1, 6, 22, ),
        /* 120 */ array(1, 32, 55, ),
        /* 121 */ array(1, 6, 55, ),
        /* 122 */ array(4, 20, 21, ),
        /* 123 */ array(4, 20, 64, ),
        /* 124 */ array(21, 22, 63, ),
        /* 125 */ array(19, 20, ),
        /* 126 */ array(19, 39, ),
        /* 127 */ array(19, 20, ),
        /* 128 */ array(22, 63, ),
        /* 129 */ array(1, 6, ),
        /* 130 */ array(4, 20, ),
        /* 131 */ array(4, 20, ),
        /* 132 */ array(4, 20, ),
        /* 133 */ array(4, 20, ),
        /* 134 */ array(4, 20, ),
        /* 135 */ array(4, 20, ),
        /* 136 */ array(30, 36, ),
        /* 137 */ array(4, 20, ),
        /* 138 */ array(4, 20, ),
        /* 139 */ array(4, 20, ),
        /* 140 */ array(4, 20, ),
        /* 141 */ array(4, 20, ),
        /* 142 */ array(4, 20, ),
        /* 143 */ array(1, 55, ),
        /* 144 */ array(19, 39, ),
        /* 145 */ array(4, 20, ),
        /* 146 */ array(30, 36, ),
        /* 147 */ array(19, 20, ),
        /* 148 */ array(4, 20, ),
        /* 149 */ array(22, ),
        /* 150 */ array(1, ),
        /* 151 */ array(1, ),
        /* 152 */ array(22, ),
        /* 153 */ array(1, ),
        /* 154 */ array(1, ),
        /* 155 */ array(1, ),
        /* 156 */ array(1, ),
        /* 157 */ array(1, ),
        /* 158 */ array(1, ),
        /* 159 */ array(),
        /* 160 */ array(6, 30, 36, ),
        /* 161 */ array(6, 30, 36, ),
        /* 162 */ array(6, 30, 36, ),
        /* 163 */ array(6, 30, 36, ),
        /* 164 */ array(6, 30, 36, ),
        /* 165 */ array(6, 30, 36, ),
        /* 166 */ array(6, 30, 36, ),
        /* 167 */ array(6, 30, 36, ),
        /* 168 */ array(6, 30, 36, ),
        /* 169 */ array(6, 30, 36, ),
        /* 170 */ array(6, 30, 36, ),
        /* 171 */ array(6, 30, 36, ),
        /* 172 */ array(6, 30, 36, ),
        /* 173 */ array(6, 30, 36, ),
        /* 174 */ array(6, 30, 36, ),
        /* 175 */ array(6, 30, 36, ),
        /* 176 */ array(6, 30, 36, ),
        /* 177 */ array(4, 19, 20, ),
        /* 178 */ array(6, 30, 36, ),
        /* 179 */ array(4, 20, 21, ),
        /* 180 */ array(6, 30, 36, ),
        /* 181 */ array(4, 20, 64, ),
        /* 182 */ array(6, 30, 36, ),
        /* 183 */ array(6, 30, 36, ),
        /* 184 */ array(1, 6, ),
        /* 185 */ array(61, 66, ),
        /* 186 */ array(61, 66, ),
        /* 187 */ array(61, 66, ),
        /* 188 */ array(61, 66, ),
        /* 189 */ array(1, 6, ),
        /* 190 */ array(61, 66, ),
        /* 191 */ array(61, 66, ),
        /* 192 */ array(4, 39, ),
        /* 193 */ array(61, 66, ),
        /* 194 */ array(61, 66, ),
        /* 195 */ array(61, 66, ),
        /* 196 */ array(1, 6, ),
        /* 197 */ array(17, ),
        /* 198 */ array(22, ),
        /* 199 */ array(30, ),
        /* 200 */ array(30, ),
        /* 201 */ array(2, ),
        /* 202 */ array(1, ),
        /* 203 */ array(1, ),
        /* 204 */ array(39, ),
        /* 205 */ array(22, ),
        /* 206 */ array(2, ),
        /* 207 */ array(22, ),
        /* 208 */ array(),
        /* 209 */ array(),
        /* 210 */ array(),
        /* 211 */ array(),
        /* 212 */ array(),
        /* 213 */ array(6, 25, 27, 28, 30, 31, 36, 38, 39, 40, 55, 63, 67, 81, ),
        /* 214 */ array(6, 21, 30, 36, 39, 63, ),
        /* 215 */ array(39, 61, 63, 67, ),
        /* 216 */ array(4, 19, 20, 37, ),
        /* 217 */ array(32, 39, 63, ),
        /* 218 */ array(39, 63, ),
        /* 219 */ array(2, 21, ),
        /* 220 */ array(38, 40, ),
        /* 221 */ array(19, 26, ),
        /* 222 */ array(39, 63, ),
        /* 223 */ array(38, 67, ),
        /* 224 */ array(39, 63, ),
        /* 225 */ array(38, 40, ),
        /* 226 */ array(39, 63, ),
        /* 227 */ array(38, 40, ),
        /* 228 */ array(38, 40, ),
        /* 229 */ array(20, 64, ),
        /* 230 */ array(25, 38, ),
        /* 231 */ array(21, 61, ),
        /* 232 */ array(20, ),
        /* 233 */ array(21, ),
        /* 234 */ array(19, ),
        /* 235 */ array(6, ),
        /* 236 */ array(19, ),
        /* 237 */ array(67, ),
        /* 238 */ array(81, ),
        /* 239 */ array(20, ),
        /* 240 */ array(20, ),
        /* 241 */ array(39, ),
        /* 242 */ array(40, ),
        /* 243 */ array(6, ),
        /* 244 */ array(20, ),
        /* 245 */ array(19, ),
        /* 246 */ array(20, ),
        /* 247 */ array(37, ),
        /* 248 */ array(20, ),
        /* 249 */ array(20, ),
        /* 250 */ array(20, ),
        /* 251 */ array(27, ),
        /* 252 */ array(61, ),
        /* 253 */ array(57, ),
        /* 254 */ array(20, ),
        /* 255 */ array(65, ),
        /* 256 */ array(2, ),
        /* 257 */ array(65, ),
        /* 258 */ array(39, ),
        /* 259 */ array(37, ),
        /* 260 */ array(19, ),
        /* 261 */ array(20, ),
        /* 262 */ array(20, ),
        /* 263 */ array(2, ),
        /* 264 */ array(),
        /* 265 */ array(),
        /* 266 */ array(),
        /* 267 */ array(),
        /* 268 */ array(),
        /* 269 */ array(),
        /* 270 */ array(),
        /* 271 */ array(),
        /* 272 */ array(),
        /* 273 */ array(),
        /* 274 */ array(),
        /* 275 */ array(),
        /* 276 */ array(),
        /* 277 */ array(),
        /* 278 */ array(),
        /* 279 */ array(),
        /* 280 */ array(),
        /* 281 */ array(),
        /* 282 */ array(),
        /* 283 */ array(),
        /* 284 */ array(),
        /* 285 */ array(),
        /* 286 */ array(),
        /* 287 */ array(),
        /* 288 */ array(),
        /* 289 */ array(),
        /* 290 */ array(),
        /* 291 */ array(),
        /* 292 */ array(),
        /* 293 */ array(),
        /* 294 */ array(),
        /* 295 */ array(),
        /* 296 */ array(),
        /* 297 */ array(),
        /* 298 */ array(),
        /* 299 */ array(),
        /* 300 */ array(),
        /* 301 */ array(),
        /* 302 */ array(),
        /* 303 */ array(),
        /* 304 */ array(),
        /* 305 */ array(),
        /* 306 */ array(),
        /* 307 */ array(),
        /* 308 */ array(),
        /* 309 */ array(),
        /* 310 */ array(),
        /* 311 */ array(),
        /* 312 */ array(),
        /* 313 */ array(),
        /* 314 */ array(),
        /* 315 */ array(),
        /* 316 */ array(),
        /* 317 */ array(),
        /* 318 */ array(),
        /* 319 */ array(),
        /* 320 */ array(),
        /* 321 */ array(),
        /* 322 */ array(),
        /* 323 */ array(),
        /* 324 */ array(),
        /* 325 */ array(),
        /* 326 */ array(),
        /* 327 */ array(),
        /* 328 */ array(),
        /* 329 */ array(),
        /* 330 */ array(),
        /* 331 */ array(),
        /* 332 */ array(),
        /* 333 */ array(),
        /* 334 */ array(),
        /* 335 */ array(),
        /* 336 */ array(),
        /* 337 */ array(),
        /* 338 */ array(),
        /* 339 */ array(),
        /* 340 */ array(),
        /* 341 */ array(),
        /* 342 */ array(),
        /* 343 */ array(),
        /* 344 */ array(),
        /* 345 */ array(),
        /* 346 */ array(),
        /* 347 */ array(),
        /* 348 */ array(),
        /* 349 */ array(),
        /* 350 */ array(),
        /* 351 */ array(),
        /* 352 */ array(),
        /* 353 */ array(),
        /* 354 */ array(),
        /* 355 */ array(),
        /* 356 */ array(),
        /* 357 */ array(),
        /* 358 */ array(),
        /* 359 */ array(),
        /* 360 */ array(),
        /* 361 */ array(),
        /* 362 */ array(),
        /* 363 */ array(),
        /* 364 */ array(),
        /* 365 */ array(),
        /* 366 */ array(),
        /* 367 */ array(),
        /* 368 */ array(),
        /* 369 */ array(),
        /* 370 */ array(),
        /* 371 */ array(),
        /* 372 */ array(),
        /* 373 */ array(),
        /* 374 */ array(),
        /* 375 */ array(),
        /* 376 */ array(),
        /* 377 */ array(),
        /* 378 */ array(),
        /* 379 */ array(),
        /* 380 */ array(),
        /* 381 */ array(),
        /* 382 */ array(),
        /* 383 */ array(),
        /* 384 */ array(),
        /* 385 */ array(),
        /* 386 */ array(),
        /* 387 */ array(),
        /* 388 */ array(),
        /* 389 */ array(),
        /* 390 */ array(),
        /* 391 */ array(),
        /* 392 */ array(),
        /* 393 */ array(),
        /* 394 */ array(),
        /* 395 */ array(),
        /* 396 */ array(),
        /* 397 */ array(),
        /* 398 */ array(),
        /* 399 */ array(),
        /* 400 */ array(),
        /* 401 */ array(),
);
    static public $yy_default = array(
 /*     0 */   405,  593,  610,  564,  610,  564,  564,  610,  564,  610,
 /*    10 */   610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
 /*    20 */   610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
 /*    30 */   610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
 /*    40 */   610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
 /*    50 */   610,  610,  610,  610,  610,  610,  610,  610,  466,  466,
 /*    60 */   466,  466,  466,  610,  610,  610,  610,  610,  610,  471,
 /*    70 */   610,  610,  610,  610,  595,  491,  594,  471,  473,  492,
 /*    80 */   487,  499,  477,  500,  476,  563,  468,  496,  596,  495,
 /*    90 */   490,  562,  504,  505,  515,  479,  466,  402,  610,  466,
 /*   100 */   466,  526,  486,  466,  466,  466,  466,  576,  610,  610,
 /*   110 */   610,  610,  610,  479,  479,  479,  536,  610,  527,  610,
 /*   120 */   479,  479,  536,  536,  527,  610,  610,  610,  527,  610,
 /*   130 */   610,  610,  610,  610,  610,  610,  466,  610,  610,  610,
 /*   140 */   610,  610,  610,  479,  610,  536,  466,  610,  610,  527,
 /*   150 */   482,  503,  573,  489,  508,  484,  509,  483,  507,  571,
 /*   160 */   610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
 /*   170 */   610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
 /*   180 */   610,  537,  610,  610,  610,  530,  532,  533,  531,  610,
 /*   190 */   534,  553,  536,  555,  554,  556,  610,  422,  550,  609,
 /*   200 */   609,  565,  526,  486,  536,  574,  566,  577,  536,  570,
 /*   210 */   536,  570,  570,  481,  515,  515,  610,  515,  523,  548,
 /*   220 */   610,  610,  501,  610,  515,  610,  502,  610,  610,  610,
 /*   230 */   610,  511,  610,  610,  610,  506,  610,  610,  506,  610,
 /*   240 */   610,  548,  610,  610,  610,  610,  610,  513,  610,  610,
 /*   250 */   610,  474,  511,  517,  610,  610,  548,  610,  575,  610,
 /*   260 */   610,  610,  610,  548,  541,  409,  426,  417,  425,  410,
 /*   270 */   427,  478,  429,  447,  432,  403,  418,  559,  428,  424,
 /*   280 */   517,  446,  411,  560,  449,  450,  456,  608,  572,  420,
 /*   290 */   451,  549,  414,  419,  412,  421,  423,  415,  558,  455,
 /*   300 */   413,  475,  467,  416,  525,  480,  521,  481,  528,  535,
 /*   310 */   514,  512,  462,  463,  506,  510,  538,  546,  522,  488,
 /*   320 */   524,  551,  520,  519,  539,  540,  516,  518,  568,  567,
 /*   330 */   464,  444,  445,  448,  431,  430,  404,  406,  407,  408,
 /*   340 */   465,  452,  569,  459,  460,  461,  458,  457,  453,  454,
 /*   350 */   547,  548,  552,  493,  598,  597,  599,  602,  601,  604,
 /*   360 */   442,  439,  440,  441,  443,  603,  606,  557,  544,  542,
 /*   370 */   543,  561,  591,  607,  600,  590,  592,  438,  437,  581,
 /*   380 */   582,  583,  584,  580,  579,  494,  497,  498,  578,  585,
 /*   390 */   586,  434,  605,  435,  436,  433,  529,  587,  588,  589,
 /*   400 */   485,  545,
);
    const YYNOCODE = 125;
    const YYSTACKDEPTH = 100;
    const YYNSTATE = 402;
    const YYNRULE = 208;
    const YYERRORSYMBOL = 83;
    const YYERRSYMDT = 'yy0';
    const YYFALLBACK = 0;
    static public $yyFallback = array(
    );
    static function Trace($TraceFILE, $zTracePrompt)
    {
        if (!$TraceFILE) {
            $zTracePrompt = 0;
        } elseif (!$zTracePrompt) {
            $TraceFILE = 0;
        }
        self::$yyTraceFILE = $TraceFILE;
        self::$yyTracePrompt = $zTracePrompt;
    }

    static function PrintTrace()
    {
        self::$yyTraceFILE = fopen('php://output', 'w');
        self::$yyTracePrompt = '<br>';
    }

    static public $yyTraceFILE;
    static public $yyTracePrompt;
    public $yyidx;                    /* Index of top element in stack */
    public $yyerrcnt;                 /* Shifts left before out of the error */
    public $yystack = array();  /* The parser's stack */

    public $yyTokenName = array(
  '$',             'VERT',          'COLON',         'TEMPLATEINIT',
  'LDEL',          'COMMENT',       'RDEL',          'PHPSTARTTAG',
  'PHPENDTAG',     'ASPSTARTTAG',   'ASPENDTAG',     'FAKEPHPSTARTTAG',
  'XMLTAG',        'TEXT',          'STRIPON',       'STRIPOFF',
  'LITERALSTART',  'LITERALEND',    'LITERAL',       'DOLLAR',
  'ID',            'EQUAL',         'PTR',           'LDELIF',
  'LDELFOR',       'SEMICOLON',     'IDINCDEC',      'TO',
  'STEP',          'LDELFOREACH',   'SPACE',         'AS',
  'APTR',          'LDELSETFILTER',  'SMARTYBLOCKCHILD',  'LDELSLASH',
  'ATTR',          'INTEGER',       'COMMA',         'OPENP',
  'CLOSEP',        'MATH',          'UNIMATH',       'ANDSYM',
  'ISIN',          'ISDIVBY',       'ISNOTDIVBY',    'ISEVEN',
  'ISNOTEVEN',     'ISEVENBY',      'ISNOTEVENBY',   'ISODD',
  'ISNOTODD',      'ISODDBY',       'ISNOTODDBY',    'INSTANCEOF',
  'NAMESPACE',     'QMARK',         'NOT',           'TYPECAST',
  'HEX',           'DOT',           'SINGLEQUOTESTRING',  'DOUBLECOLON',
  'AT',            'HATCH',         'OPENB',         'CLOSEB',
  'EQUALS',        'NOTEQUALS',     'GREATERTHAN',   'LESSTHAN',
  'GREATEREQUAL',  'LESSEQUAL',     'IDENTITY',      'NONEIDENTITY',
  'MOD',           'LAND',          'LOR',           'LXOR',
  'QUOTE',         'BACKTICK',      'DOLLARID',      'error',
  'start',         'template',      'template_element',  'smartytag',
  'literal',       'literal_elements',  'literal_element',  'value',
  'modifierlist',  'attributes',    'expr',          'varindexed',
  'statement',     'statements',    'optspace',      'varvar',
  'modparameters',  'attribute',     'ternary',       'array',
  'ifcond',        'lop',           'variable',      'function',
  'doublequoted_with_quotes',  'static_class_access',  'object',        'arrayindex',
  'indexdef',      'varvarele',     'objectchain',   'objectelement',
  'method',        'params',        'modifier',      'modparameter',
  'arrayelements',  'arrayelement',  'doublequoted',  'doublequotedcontent',
    );

    static public $yyRuleName = array(
 /*   0 */ "start ::= template",
 /*   1 */ "template ::= template_element",
 /*   2 */ "template ::= template template_element",
 /*   3 */ "template ::=",
 /*   4 */ "template_element ::= TEMPLATEINIT",
 /*   5 */ "template_element ::= smartytag",
 /*   6 */ "template_element ::= LDEL COMMENT RDEL",
 /*   7 */ "template_element ::= literal",
 /*   8 */ "template_element ::= PHPSTARTTAG",
 /*   9 */ "template_element ::= PHPENDTAG",
 /*  10 */ "template_element ::= ASPSTARTTAG",
 /*  11 */ "template_element ::= ASPENDTAG",
 /*  12 */ "template_element ::= FAKEPHPSTARTTAG",
 /*  13 */ "template_element ::= XMLTAG",
 /*  14 */ "template_element ::= TEXT",
 /*  15 */ "template_element ::= STRIPON",
 /*  16 */ "template_element ::= STRIPOFF",
 /*  17 */ "literal ::= LITERALSTART LITERALEND",
 /*  18 */ "literal ::= LITERALSTART literal_elements LITERALEND",
 /*  19 */ "literal_elements ::= literal_elements literal_element",
 /*  20 */ "literal_elements ::=",
 /*  21 */ "literal_element ::= literal",
 /*  22 */ "literal_element ::= LITERAL",
 /*  23 */ "literal_element ::= PHPSTARTTAG",
 /*  24 */ "literal_element ::= FAKEPHPSTARTTAG",
 /*  25 */ "literal_element ::= PHPENDTAG",
 /*  26 */ "literal_element ::= ASPSTARTTAG",
 /*  27 */ "literal_element ::= ASPENDTAG",
 /*  28 */ "smartytag ::= LDEL value RDEL",
 /*  29 */ "smartytag ::= LDEL value modifierlist attributes RDEL",
 /*  30 */ "smartytag ::= LDEL value attributes RDEL",
 /*  31 */ "smartytag ::= LDEL expr modifierlist attributes RDEL",
 /*  32 */ "smartytag ::= LDEL expr attributes RDEL",
 /*  33 */ "smartytag ::= LDEL DOLLAR ID EQUAL value RDEL",
 /*  34 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr RDEL",
 /*  35 */ "smartytag ::= LDEL DOLLAR ID EQUAL expr attributes RDEL",
 /*  36 */ "smartytag ::= LDEL varindexed EQUAL expr attributes RDEL",
 /*  37 */ "smartytag ::= LDEL ID attributes RDEL",
 /*  38 */ "smartytag ::= LDEL ID RDEL",
 /*  39 */ "smartytag ::= LDEL ID PTR ID attributes RDEL",
 /*  40 */ "smartytag ::= LDEL ID modifierlist attributes RDEL",
 /*  41 */ "smartytag ::= LDEL ID PTR ID modifierlist attributes RDEL",
 /*  42 */ "smartytag ::= LDELIF expr RDEL",
 /*  43 */ "smartytag ::= LDELIF expr attributes RDEL",
 /*  44 */ "smartytag ::= LDELIF statement RDEL",
 /*  45 */ "smartytag ::= LDELIF statement attributes RDEL",
 /*  46 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace DOLLAR varvar EQUAL expr attributes RDEL",
 /*  47 */ "smartytag ::= LDELFOR statements SEMICOLON optspace expr SEMICOLON optspace IDINCDEC attributes RDEL",
 /*  48 */ "smartytag ::= LDELFOR statement TO expr attributes RDEL",
 /*  49 */ "smartytag ::= LDELFOR statement TO expr STEP expr attributes RDEL",
 /*  50 */ "smartytag ::= LDELFOREACH attributes RDEL",
 /*  51 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar attributes RDEL",
 /*  52 */ "smartytag ::= LDELFOREACH SPACE value AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  53 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar attributes RDEL",
 /*  54 */ "smartytag ::= LDELFOREACH SPACE expr AS DOLLAR varvar APTR DOLLAR varvar attributes RDEL",
 /*  55 */ "smartytag ::= LDELSETFILTER ID modparameters RDEL",
 /*  56 */ "smartytag ::= LDELSETFILTER ID modparameters modifierlist RDEL",
 /*  57 */ "smartytag ::= SMARTYBLOCKCHILD",
 /*  58 */ "smartytag ::= LDELSLASH ID RDEL",
 /*  59 */ "smartytag ::= LDELSLASH ID modifierlist RDEL",
 /*  60 */ "smartytag ::= LDELSLASH ID PTR ID RDEL",
 /*  61 */ "smartytag ::= LDELSLASH ID PTR ID modifierlist RDEL",
 /*  62 */ "attributes ::= attributes attribute",
 /*  63 */ "attributes ::= attribute",
 /*  64 */ "attributes ::=",
 /*  65 */ "attribute ::= SPACE ID EQUAL ID",
 /*  66 */ "attribute ::= ATTR expr",
 /*  67 */ "attribute ::= ATTR value",
 /*  68 */ "attribute ::= SPACE ID",
 /*  69 */ "attribute ::= SPACE expr",
 /*  70 */ "attribute ::= SPACE value",
 /*  71 */ "attribute ::= SPACE INTEGER EQUAL expr",
 /*  72 */ "statements ::= statement",
 /*  73 */ "statements ::= statements COMMA statement",
 /*  74 */ "statement ::= DOLLAR varvar EQUAL expr",
 /*  75 */ "statement ::= varindexed EQUAL expr",
 /*  76 */ "statement ::= OPENP statement CLOSEP",
 /*  77 */ "expr ::= value",
 /*  78 */ "expr ::= ternary",
 /*  79 */ "expr ::= DOLLAR ID COLON ID",
 /*  80 */ "expr ::= expr MATH value",
 /*  81 */ "expr ::= expr UNIMATH value",
 /*  82 */ "expr ::= expr ANDSYM value",
 /*  83 */ "expr ::= array",
 /*  84 */ "expr ::= expr modifierlist",
 /*  85 */ "expr ::= expr ifcond expr",
 /*  86 */ "expr ::= expr ISIN array",
 /*  87 */ "expr ::= expr ISIN value",
 /*  88 */ "expr ::= expr lop expr",
 /*  89 */ "expr ::= expr ISDIVBY expr",
 /*  90 */ "expr ::= expr ISNOTDIVBY expr",
 /*  91 */ "expr ::= expr ISEVEN",
 /*  92 */ "expr ::= expr ISNOTEVEN",
 /*  93 */ "expr ::= expr ISEVENBY expr",
 /*  94 */ "expr ::= expr ISNOTEVENBY expr",
 /*  95 */ "expr ::= expr ISODD",
 /*  96 */ "expr ::= expr ISNOTODD",
 /*  97 */ "expr ::= expr ISODDBY expr",
 /*  98 */ "expr ::= expr ISNOTODDBY expr",
 /*  99 */ "expr ::= value INSTANCEOF ID",
 /* 100 */ "expr ::= value INSTANCEOF NAMESPACE",
 /* 101 */ "expr ::= value INSTANCEOF value",
 /* 102 */ "ternary ::= OPENP expr CLOSEP QMARK DOLLAR ID COLON expr",
 /* 103 */ "ternary ::= OPENP expr CLOSEP QMARK expr COLON expr",
 /* 104 */ "value ::= variable",
 /* 105 */ "value ::= UNIMATH value",
 /* 106 */ "value ::= NOT value",
 /* 107 */ "value ::= TYPECAST value",
 /* 108 */ "value ::= HEX",
 /* 109 */ "value ::= INTEGER",
 /* 110 */ "value ::= INTEGER DOT INTEGER",
 /* 111 */ "value ::= INTEGER DOT",
 /* 112 */ "value ::= DOT INTEGER",
 /* 113 */ "value ::= ID",
 /* 114 */ "value ::= function",
 /* 115 */ "value ::= OPENP expr CLOSEP",
 /* 116 */ "value ::= SINGLEQUOTESTRING",
 /* 117 */ "value ::= doublequoted_with_quotes",
 /* 118 */ "value ::= IDINCDEC",
 /* 119 */ "value ::= ID DOUBLECOLON static_class_access",
 /* 120 */ "value ::= NAMESPACE DOUBLECOLON static_class_access",
 /* 121 */ "value ::= NAMESPACE",
 /* 122 */ "value ::= varindexed DOUBLECOLON static_class_access",
 /* 123 */ "value ::= smartytag",
 /* 124 */ "value ::= value modifierlist",
 /* 125 */ "variable ::= varindexed",
 /* 126 */ "variable ::= DOLLAR varvar AT ID",
 /* 127 */ "variable ::= object",
 /* 128 */ "variable ::= HATCH ID HATCH",
 /* 129 */ "variable ::= HATCH ID HATCH arrayindex",
 /* 130 */ "variable ::= HATCH variable HATCH",
 /* 131 */ "variable ::= HATCH variable HATCH arrayindex",
 /* 132 */ "varindexed ::= DOLLAR varvar arrayindex",
 /* 133 */ "arrayindex ::= arrayindex indexdef",
 /* 134 */ "arrayindex ::=",
 /* 135 */ "indexdef ::= DOT DOLLAR varvar",
 /* 136 */ "indexdef ::= DOT DOLLAR varvar AT ID",
 /* 137 */ "indexdef ::= DOT ID",
 /* 138 */ "indexdef ::= DOT INTEGER",
 /* 139 */ "indexdef ::= DOT LDEL expr RDEL",
 /* 140 */ "indexdef ::= OPENB ID CLOSEB",
 /* 141 */ "indexdef ::= OPENB ID DOT ID CLOSEB",
 /* 142 */ "indexdef ::= OPENB expr CLOSEB",
 /* 143 */ "indexdef ::= OPENB CLOSEB",
 /* 144 */ "varvar ::= varvarele",
 /* 145 */ "varvar ::= varvar varvarele",
 /* 146 */ "varvarele ::= ID",
 /* 147 */ "varvarele ::= LDEL expr RDEL",
 /* 148 */ "object ::= varindexed objectchain",
 /* 149 */ "objectchain ::= objectelement",
 /* 150 */ "objectchain ::= objectchain objectelement",
 /* 151 */ "objectelement ::= PTR ID arrayindex",
 /* 152 */ "objectelement ::= PTR DOLLAR varvar arrayindex",
 /* 153 */ "objectelement ::= PTR LDEL expr RDEL arrayindex",
 /* 154 */ "objectelement ::= PTR ID LDEL expr RDEL arrayindex",
 /* 155 */ "objectelement ::= PTR method",
 /* 156 */ "function ::= ID OPENP params CLOSEP",
 /* 157 */ "function ::= NAMESPACE OPENP params CLOSEP",
 /* 158 */ "method ::= ID OPENP params CLOSEP",
 /* 159 */ "method ::= DOLLAR ID OPENP params CLOSEP",
 /* 160 */ "params ::= params COMMA expr",
 /* 161 */ "params ::= expr",
 /* 162 */ "params ::=",
 /* 163 */ "modifierlist ::= modifierlist modifier modparameters",
 /* 164 */ "modifierlist ::= modifier modparameters",
 /* 165 */ "modifier ::= VERT AT ID",
 /* 166 */ "modifier ::= VERT ID",
 /* 167 */ "modparameters ::= modparameters modparameter",
 /* 168 */ "modparameters ::=",
 /* 169 */ "modparameter ::= COLON value",
 /* 170 */ "modparameter ::= COLON array",
 /* 171 */ "static_class_access ::= method",
 /* 172 */ "static_class_access ::= method objectchain",
 /* 173 */ "static_class_access ::= ID",
 /* 174 */ "static_class_access ::= DOLLAR ID arrayindex",
 /* 175 */ "static_class_access ::= DOLLAR ID arrayindex objectchain",
 /* 176 */ "ifcond ::= EQUALS",
 /* 177 */ "ifcond ::= NOTEQUALS",
 /* 178 */ "ifcond ::= GREATERTHAN",
 /* 179 */ "ifcond ::= LESSTHAN",
 /* 180 */ "ifcond ::= GREATEREQUAL",
 /* 181 */ "ifcond ::= LESSEQUAL",
 /* 182 */ "ifcond ::= IDENTITY",
 /* 183 */ "ifcond ::= NONEIDENTITY",
 /* 184 */ "ifcond ::= MOD",
 /* 185 */ "lop ::= LAND",
 /* 186 */ "lop ::= LOR",
 /* 187 */ "lop ::= LXOR",
 /* 188 */ "array ::= OPENB arrayelements CLOSEB",
 /* 189 */ "arrayelements ::= arrayelement",
 /* 190 */ "arrayelements ::= arrayelements COMMA arrayelement",
 /* 191 */ "arrayelements ::=",
 /* 192 */ "arrayelement ::= value APTR expr",
 /* 193 */ "arrayelement ::= ID APTR expr",
 /* 194 */ "arrayelement ::= expr",
 /* 195 */ "doublequoted_with_quotes ::= QUOTE QUOTE",
 /* 196 */ "doublequoted_with_quotes ::= QUOTE doublequoted QUOTE",
 /* 197 */ "doublequoted ::= doublequoted doublequotedcontent",
 /* 198 */ "doublequoted ::= doublequotedcontent",
 /* 199 */ "doublequotedcontent ::= BACKTICK variable BACKTICK",
 /* 200 */ "doublequotedcontent ::= BACKTICK expr BACKTICK",
 /* 201 */ "doublequotedcontent ::= DOLLARID",
 /* 202 */ "doublequotedcontent ::= LDEL variable RDEL",
 /* 203 */ "doublequotedcontent ::= LDEL expr RDEL",
 /* 204 */ "doublequotedcontent ::= smartytag",
 /* 205 */ "doublequotedcontent ::= TEXT",
 /* 206 */ "optspace ::= SPACE",
 /* 207 */ "optspace ::=",
    );

    function tokenName($tokenType)
    {
        if ($tokenType === 0) {
            return 'End of Input';
        }
        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {
            return $this->yyTokenName[$tokenType];
        } else {
            return "Unknown";
        }
    }

    static function yy_destructor($yymajor, $yypminor)
    {
        switch ($yymajor) {
            default:  break;   /* If no destructor action specified: do nothing */
        }
    }

    function yy_pop_parser_stack()
    {
        if (!count($this->yystack)) {
            return;
        }
        $yytos = array_pop($this->yystack);
        if (self::$yyTraceFILE && $this->yyidx >= 0) {
            fwrite(self::$yyTraceFILE,
                self::$yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .
                    "\n");
        }
        $yymajor = $yytos->major;
        self::yy_destructor($yymajor, $yytos->minor);
        $this->yyidx--;
        return $yymajor;
    }

    function __destruct()
    {
        while ($this->yystack !== Array()) {
            $this->yy_pop_parser_stack();
        }
        if (is_resource(self::$yyTraceFILE)) {
            fclose(self::$yyTraceFILE);
        }
    }

    function yy_get_expected_tokens($token)
    {
        $state = $this->yystack[$this->yyidx]->stateno;
        $expected = self::$yyExpectedTokens[$state];
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return $expected;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return array_unique($expected);
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate])) {
		        $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);
                            if (in_array($token,
                                  self::$yyExpectedTokens[$nextstate], true)) {
                            $this->yyidx = $yyidx;
                            $this->yystack = $stack;
                            return array_unique($expected);
                        }
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return array_unique($expected);
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return $expected;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
	$this->yyidx = $yyidx;
	$this->yystack = $stack;
        return array_unique($expected);
    }

    function yy_is_expected_token($token)
    {
        if ($token === 0) {
            return true; // 0 is not part of this
        }
        $state = $this->yystack[$this->yyidx]->stateno;
        if (in_array($token, self::$yyExpectedTokens[$state], true)) {
            return true;
        }
        $stack = $this->yystack;
        $yyidx = $this->yyidx;
        do {
            $yyact = $this->yy_find_shift_action($token);
            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {
                // reduce action
                $done = 0;
                do {
                    if ($done++ == 100) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // too much recursion prevents proper detection
                        // so give up
                        return true;
                    }
                    $yyruleno = $yyact - self::YYNSTATE;
                    $this->yyidx -= self::$yyRuleInfo[$yyruleno]['rhs'];
                    $nextstate = $this->yy_find_reduce_action(
                        $this->yystack[$this->yyidx]->stateno,
                        self::$yyRuleInfo[$yyruleno]['lhs']);
                    if (isset(self::$yyExpectedTokens[$nextstate]) &&
                          in_array($token, self::$yyExpectedTokens[$nextstate], true)) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        return true;
                    }
                    if ($nextstate < self::YYNSTATE) {
                        // we need to shift a non-terminal
                        $this->yyidx++;
                        $x = new TP_yyStackEntry;
                        $x->stateno = $nextstate;
                        $x->major = self::$yyRuleInfo[$yyruleno]['lhs'];
                        $this->yystack[$this->yyidx] = $x;
                        continue 2;
                    } elseif ($nextstate == self::YYNSTATE + self::YYNRULE + 1) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        if (!$token) {
                            // end of input: this is valid
                            return true;
                        }
                        // the last token was just ignored, we can't accept
                        // by ignoring input, this is in essence ignoring a
                        // syntax error!
                        return false;
                    } elseif ($nextstate === self::YY_NO_ACTION) {
                        $this->yyidx = $yyidx;
                        $this->yystack = $stack;
                        // input accepted, but not shifted (I guess)
                        return true;
                    } else {
                        $yyact = $nextstate;
                    }
                } while (true);
            }
            break;
        } while (true);
        $this->yyidx = $yyidx;
        $this->yystack = $stack;
        return true;
    }

   function yy_find_shift_action($iLookAhead)
    {
        $stateno = $this->yystack[$this->yyidx]->stateno;

        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */
        if (!isset(self::$yy_shift_ofst[$stateno])) {
            // no shift actions
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_shift_ofst[$stateno];
        if ($i === self::YY_SHIFT_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)
                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {
                if (self::$yyTraceFILE) {
                    fwrite(self::$yyTraceFILE, self::$yyTracePrompt . "FALLBACK " .
                        $this->yyTokenName[$iLookAhead] . " => " .
                        $this->yyTokenName[$iFallback] . "\n");
                }
                return $this->yy_find_shift_action($iFallback);
            }
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_find_reduce_action($stateno, $iLookAhead)
    {
        /* $stateno = $this->yystack[$this->yyidx]->stateno; */

        if (!isset(self::$yy_reduce_ofst[$stateno])) {
            return self::$yy_default[$stateno];
        }
        $i = self::$yy_reduce_ofst[$stateno];
        if ($i == self::YY_REDUCE_USE_DFLT) {
            return self::$yy_default[$stateno];
        }
        if ($iLookAhead == self::YYNOCODE) {
            return self::YY_NO_ACTION;
        }
        $i += $iLookAhead;
        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||
              self::$yy_lookahead[$i] != $iLookAhead) {
            return self::$yy_default[$stateno];
        } else {
            return self::$yy_action[$i];
        }
    }

    function yy_shift($yyNewState, $yyMajor, $yypMinor)
    {
        $this->yyidx++;
        if ($this->yyidx >= self::YYSTACKDEPTH) {
            $this->yyidx--;
            if (self::$yyTraceFILE) {
                fprintf(self::$yyTraceFILE, "%sStack Overflow!\n", self::$yyTracePrompt);
            }
            while ($this->yyidx >= 0) {
                $this->yy_pop_parser_stack();
            }
#line 102 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->compiler->trigger_template_error("Stack overflow in template parser");
#line 1828 "smarty_internal_templateparser.php"
            return;
        }
        $yytos = new TP_yyStackEntry;
        $yytos->stateno = $yyNewState;
        $yytos->major = $yyMajor;
        $yytos->minor = $yypMinor;
        array_push($this->yystack, $yytos);
        if (self::$yyTraceFILE && $this->yyidx > 0) {
            fprintf(self::$yyTraceFILE, "%sShift %d\n", self::$yyTracePrompt,
                $yyNewState);
            fprintf(self::$yyTraceFILE, "%sStack:", self::$yyTracePrompt);
            for($i = 1; $i <= $this->yyidx; $i++) {
                fprintf(self::$yyTraceFILE, " %s",
                    $this->yyTokenName[$this->yystack[$i]->major]);
            }
            fwrite(self::$yyTraceFILE,"\n");
        }
    }

    static public $yyRuleInfo = array(
  array( 'lhs' => 84, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 1 ),
  array( 'lhs' => 85, 'rhs' => 2 ),
  array( 'lhs' => 85, 'rhs' => 0 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 3 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 86, 'rhs' => 1 ),
  array( 'lhs' => 88, 'rhs' => 2 ),
  array( 'lhs' => 88, 'rhs' => 3 ),
  array( 'lhs' => 89, 'rhs' => 2 ),
  array( 'lhs' => 89, 'rhs' => 0 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 90, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 7 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 13 ),
  array( 'lhs' => 87, 'rhs' => 10 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 11 ),
  array( 'lhs' => 87, 'rhs' => 8 ),
  array( 'lhs' => 87, 'rhs' => 11 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 1 ),
  array( 'lhs' => 87, 'rhs' => 3 ),
  array( 'lhs' => 87, 'rhs' => 4 ),
  array( 'lhs' => 87, 'rhs' => 5 ),
  array( 'lhs' => 87, 'rhs' => 6 ),
  array( 'lhs' => 93, 'rhs' => 2 ),
  array( 'lhs' => 93, 'rhs' => 1 ),
  array( 'lhs' => 93, 'rhs' => 0 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 2 ),
  array( 'lhs' => 101, 'rhs' => 4 ),
  array( 'lhs' => 97, 'rhs' => 1 ),
  array( 'lhs' => 97, 'rhs' => 3 ),
  array( 'lhs' => 96, 'rhs' => 4 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 96, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 4 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 1 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 2 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 94, 'rhs' => 3 ),
  array( 'lhs' => 102, 'rhs' => 8 ),
  array( 'lhs' => 102, 'rhs' => 7 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 3 ),
  array( 'lhs' => 91, 'rhs' => 1 ),
  array( 'lhs' => 91, 'rhs' => 2 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 1 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 106, 'rhs' => 3 ),
  array( 'lhs' => 106, 'rhs' => 4 ),
  array( 'lhs' => 95, 'rhs' => 3 ),
  array( 'lhs' => 111, 'rhs' => 2 ),
  array( 'lhs' => 111, 'rhs' => 0 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 5 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 112, 'rhs' => 4 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 5 ),
  array( 'lhs' => 112, 'rhs' => 3 ),
  array( 'lhs' => 112, 'rhs' => 2 ),
  array( 'lhs' => 99, 'rhs' => 1 ),
  array( 'lhs' => 99, 'rhs' => 2 ),
  array( 'lhs' => 113, 'rhs' => 1 ),
  array( 'lhs' => 113, 'rhs' => 3 ),
  array( 'lhs' => 110, 'rhs' => 2 ),
  array( 'lhs' => 114, 'rhs' => 1 ),
  array( 'lhs' => 114, 'rhs' => 2 ),
  array( 'lhs' => 115, 'rhs' => 3 ),
  array( 'lhs' => 115, 'rhs' => 4 ),
  array( 'lhs' => 115, 'rhs' => 5 ),
  array( 'lhs' => 115, 'rhs' => 6 ),
  array( 'lhs' => 115, 'rhs' => 2 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 107, 'rhs' => 4 ),
  array( 'lhs' => 116, 'rhs' => 4 ),
  array( 'lhs' => 116, 'rhs' => 5 ),
  array( 'lhs' => 117, 'rhs' => 3 ),
  array( 'lhs' => 117, 'rhs' => 1 ),
  array( 'lhs' => 117, 'rhs' => 0 ),
  array( 'lhs' => 92, 'rhs' => 3 ),
  array( 'lhs' => 92, 'rhs' => 2 ),
  array( 'lhs' => 118, 'rhs' => 3 ),
  array( 'lhs' => 118, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 2 ),
  array( 'lhs' => 100, 'rhs' => 0 ),
  array( 'lhs' => 119, 'rhs' => 2 ),
  array( 'lhs' => 119, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 2 ),
  array( 'lhs' => 109, 'rhs' => 1 ),
  array( 'lhs' => 109, 'rhs' => 3 ),
  array( 'lhs' => 109, 'rhs' => 4 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 104, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 105, 'rhs' => 1 ),
  array( 'lhs' => 103, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 1 ),
  array( 'lhs' => 120, 'rhs' => 3 ),
  array( 'lhs' => 120, 'rhs' => 0 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 3 ),
  array( 'lhs' => 121, 'rhs' => 1 ),
  array( 'lhs' => 108, 'rhs' => 2 ),
  array( 'lhs' => 108, 'rhs' => 3 ),
  array( 'lhs' => 122, 'rhs' => 2 ),
  array( 'lhs' => 122, 'rhs' => 1 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 1 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 3 ),
  array( 'lhs' => 123, 'rhs' => 1 ),
  array( 'lhs' => 123, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 1 ),
  array( 'lhs' => 98, 'rhs' => 0 ),
    );

    static public $yyReduceMap = array(
        0 => 0,
        1 => 1,
        2 => 1,
        4 => 4,
        5 => 5,
        6 => 6,
        7 => 7,
        8 => 8,
        9 => 9,
        10 => 10,
        11 => 11,
        12 => 12,
        13 => 13,
        14 => 14,
        15 => 15,
        16 => 16,
        17 => 17,
        20 => 17,
        207 => 17,
        18 => 18,
        76 => 18,
        19 => 19,
        105 => 19,
        107 => 19,
        133 => 19,
        172 => 19,
        21 => 21,
        22 => 21,
        69 => 21,
        70 => 21,
        77 => 21,
        78 => 21,
        83 => 21,
        104 => 21,
        108 => 21,
        109 => 21,
        114 => 21,
        116 => 21,
        117 => 21,
        121 => 21,
        127 => 21,
        144 => 21,
        171 => 21,
        173 => 21,
        189 => 21,
        194 => 21,
        206 => 21,
        23 => 23,
        24 => 23,
        25 => 25,
        26 => 26,
        27 => 27,
        28 => 28,
        29 => 29,
        30 => 30,
        32 => 30,
        31 => 31,
        33 => 33,
        34 => 33,
        35 => 35,
        36 => 36,
        37 => 37,
        38 => 38,
        39 => 39,
        40 => 40,
        41 => 41,
        42 => 42,
        43 => 43,
        45 => 43,
        44 => 44,
        46 => 46,
        47 => 47,
        48 => 48,
        49 => 49,
        50 => 50,
        51 => 51,
        52 => 52,
        53 => 53,
        54 => 54,
        55 => 55,
        56 => 56,
        57 => 57,
        58 => 58,
        59 => 59,
        60 => 60,
        61 => 61,
        62 => 62,
        63 => 63,
        72 => 63,
        161 => 63,
        165 => 63,
        169 => 63,
        170 => 63,
        64 => 64,
        162 => 64,
        168 => 64,
        65 => 65,
        66 => 66,
        67 => 66,
        68 => 68,
        71 => 71,
        73 => 73,
        74 => 74,
        75 => 74,
        79 => 79,
        80 => 80,
        81 => 80,
        82 => 80,
        84 => 84,
        124 => 84,
        85 => 85,
        88 => 85,
        99 => 85,
        100 => 85,
        86 => 86,
        87 => 87,
        89 => 89,
        90 => 90,
        91 => 91,
        96 => 91,
        92 => 92,
        95 => 92,
        93 => 93,
        98 => 93,
        94 => 94,
        97 => 94,
        101 => 101,
        102 => 102,
        103 => 103,
        106 => 106,
        110 => 110,
        111 => 111,
        112 => 112,
        113 => 113,
        115 => 115,
        118 => 118,
        119 => 119,
        120 => 120,
        122 => 122,
        123 => 123,
        125 => 125,
        126 => 126,
        128 => 128,
        129 => 129,
        130 => 130,
        131 => 131,
        132 => 132,
        134 => 134,
        191 => 134,
        135 => 135,
        136 => 136,
        137 => 137,
        138 => 138,
        139 => 139,
        142 => 139,
        140 => 140,
        141 => 141,
        143 => 143,
        145 => 145,
        146 => 146,
        147 => 147,
        148 => 148,
        149 => 149,
        150 => 150,
        151 => 151,
        152 => 152,
        153 => 153,
        154 => 154,
        155 => 155,
        156 => 156,
        157 => 157,
        158 => 158,
        159 => 159,
        160 => 160,
        163 => 163,
        164 => 164,
        166 => 166,
        167 => 167,
        174 => 174,
        175 => 175,
        176 => 176,
        177 => 177,
        178 => 178,
        179 => 179,
        180 => 180,
        181 => 181,
        182 => 182,
        183 => 183,
        184 => 184,
        185 => 185,
        186 => 186,
        187 => 187,
        188 => 188,
        190 => 190,
        192 => 192,
        193 => 193,
        195 => 195,
        196 => 196,
        197 => 197,
        198 => 198,
        199 => 199,
        200 => 199,
        202 => 199,
        201 => 201,
        203 => 203,
        204 => 204,
        205 => 205,
    );
#line 113 "smarty_internal_templateparser.y"
    function yy_r0(){
   // execute end of template
   $this->current_buffer->append_subtree(new _smarty_text($this, "<?php array_shift(\$_smarty_tpl->trace_call_stack);?>"));
   if ($this->compiler->template->caching) {
       $this->compiler->has_code = true;
       $this->compiler->nocache_nolog = true;
       $this->current_buffer->append_subtree(new _smarty_text($this, $this->compiler->processNocacheCode("<?php array_shift(\$_smarty_tpl->trace_call_stack);?>", true)));
   }
   // merge all buffer to output
   $this->_retvalue = $this->root_buffer->to_smarty_php();
    }
#line 2280 "smarty_internal_templateparser.php"
#line 129 "smarty_internal_templateparser.y"
    function yy_r1(){
    $this->current_buffer->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2285 "smarty_internal_templateparser.php"
#line 145 "smarty_internal_templateparser.y"
    function yy_r4(){
    if ($this->compiler->template->source->type == 'eval' || $this->compiler->template->source->type == 'string') {
        $resource = $this->compiler->template->source->type;
    } else {
        $resource = $this->compiler->template->template_resource;
        // santitize extends resource
        if (strpos($resource,'extends:') !==false) {
            $start = strpos($resource,':');
            $end = strpos($resource,'|');
            $resource = substr($resource,$start+1,$end-$start-1);
        }
    }
    $code = "<?php array_unshift(\$_smarty_tpl->trace_call_stack, array('{$resource}', 0, '{$this->compiler->template->source->type}'));?>";
    if ($this->compiler->template->caching) {
        $this->compiler->has_code = true;
        $this->compiler->nocache_nolog = true;
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($code, true) . $code);
    } else {
        $this->_retvalue = new _smarty_tag($this, $code);
    }
    }
#line 2308 "smarty_internal_templateparser.php"
#line 169 "smarty_internal_templateparser.y"
    function yy_r5(){
    if ($this->compiler->has_code) {
        $tmp ='';
        if ($this->smarty->enable_traceback && (!$this->compiler->nocache && !$this->compiler->tag_nocache) && $this->last_taglineno != $this->lex->taglineno ||
            (($this->compiler->nocache || $this->compiler->tag_nocache) && $this->last_taglineno_nocache != $this->lex->taglineno)) {
            $tmp = "<?php \$_smarty_tpl->trace_call_stack[0][1] = {$this->lex->taglineno};?>";
            if (!$this->compiler->nocache && !$this->compiler->tag_nocache) {
                $this->last_taglineno = $this->lex->taglineno;
            } else {
                $this->last_taglineno_nocache = $this->lex->taglineno;
            }
        }
        foreach ($this->compiler->prefix_code as $code) {$tmp.=$code;} $this->compiler->prefix_code=array();
        $this->_retvalue = new _smarty_tag($this, $this->compiler->processNocacheCode($tmp.$this->yystack[$this->yyidx + 0]->minor,true));
    } else {
        $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    $this->compiler->has_variable_string = false;
    $this->block_nesting_level = count($this->compiler->_tag_stack);
    }
#line 2330 "smarty_internal_templateparser.php"
#line 191 "smarty_internal_templateparser.y"
    function yy_r6(){
    $this->_retvalue = new _smarty_text($this, '');
    }
#line 2335 "smarty_internal_templateparser.php"
#line 196 "smarty_internal_templateparser.y"
    function yy_r7(){
    $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 2340 "smarty_internal_templateparser.php"
#line 201 "smarty_internal_templateparser.y"
    function yy_r8(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if (!($this->smarty instanceof SmartyBC)) {
            $this->compiler->trigger_template_error (self::Err3);
        }
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<?php', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2356 "smarty_internal_templateparser.php"
#line 217 "smarty_internal_templateparser.y"
    function yy_r9(){
    if ($this->is_xml) {
        $this->compiler->nocache_nolog = true;
        $this->is_xml = false;
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '?>';?>\n", true));
    } elseif ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '?<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('?>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('?>', true));
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        $this->_retvalue = new _smarty_text($this, '');
    }
    }
#line 2373 "smarty_internal_templateparser.php"
#line 234 "smarty_internal_templateparser.y"
    function yy_r10(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars($this->yystack[$this->yyidx + 0]->minor, ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            if (!($this->smarty instanceof SmartyBC)) {
                $this->compiler->trigger_template_error (self::Err3);
            }
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('<%', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '<<?php ?>%');
        }
    }
    }
#line 2397 "smarty_internal_templateparser.php"
#line 258 "smarty_internal_templateparser.y"
    function yy_r11(){
    if ($this->php_handling == Smarty::PHP_PASSTHRU) {
        $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
    } elseif ($this->php_handling == Smarty::PHP_QUOTE) {
        $this->_retvalue = new _smarty_text($this, htmlspecialchars('%>', ENT_QUOTES));
    } elseif ($this->php_handling == Smarty::PHP_ALLOW) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode('%>', true));
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    } elseif ($this->php_handling == Smarty::PHP_REMOVE) {
        if ($this->asp_tags) {
            $this->_retvalue = new _smarty_text($this, '');
        } else {
            $this->_retvalue = new _smarty_text($this, '%<?php ?>>');
        }
    }
    }
#line 2418 "smarty_internal_templateparser.php"
#line 278 "smarty_internal_templateparser.y"
    function yy_r12(){
    if ($this->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor)));
    } else {
        $this->_retvalue = new _smarty_text($this, self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor));
    }
    }
#line 2427 "smarty_internal_templateparser.php"
#line 287 "smarty_internal_templateparser.y"
    function yy_r13(){
    $this->compiler->nocache_nolog = true;
    $this->is_xml = true;
    $this->_retvalue = new _smarty_text($this, $this->compiler->processNocacheCode("<?php echo '<?xml';?>", true));
    }
#line 2434 "smarty_internal_templateparser.php"
#line 294 "smarty_internal_templateparser.y"
    function yy_r14(){
    if ($this->strip) {
        $this->_retvalue = new _smarty_text($this, preg_replace('![\t ]*[\r\n]+[\t ]*!', '', $this->yystack[$this->yyidx + 0]->minor));
    } else {
        $this->_retvalue = new _smarty_text($this, $this->yystack[$this->yyidx + 0]->minor);
    }
    }
#line 2443 "smarty_internal_templateparser.php"
#line 303 "smarty_internal_templateparser.y"
    function yy_r15(){
    $this->strip = true;
    $this->_retvalue = new _smarty_text($this, '');
    }
#line 2449 "smarty_internal_templateparser.php"
#line 308 "smarty_internal_templateparser.y"
    function yy_r16(){
    $this->strip = false;
    $this->_retvalue = new _smarty_text($this, '');
    }
#line 2455 "smarty_internal_templateparser.php"
#line 314 "smarty_internal_templateparser.y"
    function yy_r17(){
    $this->_retvalue = '';
    }
#line 2460 "smarty_internal_templateparser.php"
#line 318 "smarty_internal_templateparser.y"
    function yy_r18(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 2465 "smarty_internal_templateparser.php"
#line 322 "smarty_internal_templateparser.y"
    function yy_r19(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2470 "smarty_internal_templateparser.php"
#line 330 "smarty_internal_templateparser.y"
    function yy_r21(){
    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2475 "smarty_internal_templateparser.php"
#line 338 "smarty_internal_templateparser.y"
    function yy_r23(){
    $this->_retvalue = self::escape_start_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2480 "smarty_internal_templateparser.php"
#line 346 "smarty_internal_templateparser.y"
    function yy_r25(){
    $this->_retvalue = self::escape_end_tag($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2485 "smarty_internal_templateparser.php"
#line 350 "smarty_internal_templateparser.y"
    function yy_r26(){
    $this->_retvalue = '<<?php ?>%';
    }
#line 2490 "smarty_internal_templateparser.php"
#line 354 "smarty_internal_templateparser.y"
    function yy_r27(){
    $this->_retvalue = '%<?php ?>>';
    }
#line 2495 "smarty_internal_templateparser.php"
#line 363 "smarty_internal_templateparser.y"
    function yy_r28(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2500 "smarty_internal_templateparser.php"
#line 367 "smarty_internal_templateparser.y"
    function yy_r29(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2505 "smarty_internal_templateparser.php"
#line 371 "smarty_internal_templateparser.y"
    function yy_r30(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2510 "smarty_internal_templateparser.php"
#line 375 "smarty_internal_templateparser.y"
    function yy_r31(){
    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + -1]->minor,array('value'=>$this->yystack[$this->yyidx + -3]->minor,'modifierlist'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2515 "smarty_internal_templateparser.php"
#line 388 "smarty_internal_templateparser.y"
    function yy_r33(){
    $this->_retvalue = $this->compiler->compileTag('assign',array(array('value'=>$this->yystack[$this->yyidx + -1]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -3]->minor."'")));
    }
#line 2520 "smarty_internal_templateparser.php"
#line 396 "smarty_internal_templateparser.y"
    function yy_r35(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>"'".$this->yystack[$this->yyidx + -4]->minor."'")),$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2525 "smarty_internal_templateparser.php"
#line 400 "smarty_internal_templateparser.y"
    function yy_r36(){
    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + -2]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor['var'])),$this->yystack[$this->yyidx + -1]->minor),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -4]->minor['smarty_internal_index']));
    }
#line 2530 "smarty_internal_templateparser.php"
#line 405 "smarty_internal_templateparser.y"
    function yy_r37(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2535 "smarty_internal_templateparser.php"
#line 409 "smarty_internal_templateparser.y"
    function yy_r38(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,array());
    }
#line 2540 "smarty_internal_templateparser.php"
#line 414 "smarty_internal_templateparser.y"
    function yy_r39(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2545 "smarty_internal_templateparser.php"
#line 419 "smarty_internal_templateparser.y"
    function yy_r40(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + -1]->minor).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).';?>';
    }
#line 2551 "smarty_internal_templateparser.php"
#line 425 "smarty_internal_templateparser.y"
    function yy_r41(){
    $this->_retvalue = '<?php ob_start();?>'.$this->compiler->compileTag($this->yystack[$this->yyidx + -5]->minor,$this->yystack[$this->yyidx + -1]->minor,array('object_methode'=>$this->yystack[$this->yyidx + -3]->minor)).'<?php echo ';
    $this->_retvalue .= $this->compiler->compileTag('private_modifier',array(),array('modifierlist'=>$this->yystack[$this->yyidx + -2]->minor,'value'=>'ob_get_clean()')).';?>';
    }
#line 2557 "smarty_internal_templateparser.php"
#line 431 "smarty_internal_templateparser.y"
    function yy_r42(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2563 "smarty_internal_templateparser.php"
#line 436 "smarty_internal_templateparser.y"
    function yy_r43(){
    $tag = trim(substr($this->yystack[$this->yyidx + -3]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + -1]->minor,array('if condition'=>$this->yystack[$this->yyidx + -2]->minor));
    }
#line 2569 "smarty_internal_templateparser.php"
#line 441 "smarty_internal_templateparser.y"
    function yy_r44(){
    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->lex->ldel_length));
    $this->_retvalue = $this->compiler->compileTag(($tag == 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2575 "smarty_internal_templateparser.php"
#line 452 "smarty_internal_templateparser.y"
    function yy_r46(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -11]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -8]->minor),array('var'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>'='.$this->yystack[$this->yyidx + -2]->minor))),1);
    }
#line 2580 "smarty_internal_templateparser.php"
#line 455 "smarty_internal_templateparser.y"
    function yy_r47(){
    $len =strlen($this->yystack[$this->yyidx + -2]->minor);
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -8]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -5]->minor),array('var'=>substr($this->yystack[$this->yyidx + -2]->minor,1,$len-3)),array('step'=>substr($this->yystack[$this->yyidx + -2]->minor,$len-2)))),1);
    }
#line 2586 "smarty_internal_templateparser.php"
#line 460 "smarty_internal_templateparser.y"
    function yy_r48(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -4]->minor),array('to'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2591 "smarty_internal_templateparser.php"
#line 464 "smarty_internal_templateparser.y"
    function yy_r49(){
    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('to'=>$this->yystack[$this->yyidx + -4]->minor),array('step'=>$this->yystack[$this->yyidx + -2]->minor))),0);
    }
#line 2596 "smarty_internal_templateparser.php"
#line 469 "smarty_internal_templateparser.y"
    function yy_r50(){
    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + -1]->minor);
    }
#line 2601 "smarty_internal_templateparser.php"
#line 474 "smarty_internal_templateparser.y"
    function yy_r51(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2606 "smarty_internal_templateparser.php"
#line 478 "smarty_internal_templateparser.y"
    function yy_r52(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2611 "smarty_internal_templateparser.php"
#line 482 "smarty_internal_templateparser.y"
    function yy_r53(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor))));
    }
#line 2616 "smarty_internal_templateparser.php"
#line 486 "smarty_internal_templateparser.y"
    function yy_r54(){
    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + -1]->minor,array(array('from'=>$this->yystack[$this->yyidx + -8]->minor),array('item'=>$this->yystack[$this->yyidx + -2]->minor),array('key'=>$this->yystack[$this->yyidx + -5]->minor))));
    }
#line 2621 "smarty_internal_templateparser.php"
#line 491 "smarty_internal_templateparser.y"
    function yy_r55(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor))));
    }
#line 2626 "smarty_internal_templateparser.php"
#line 495 "smarty_internal_templateparser.y"
    function yy_r56(){
    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -3]->minor),$this->yystack[$this->yyidx + -2]->minor)),$this->yystack[$this->yyidx + -1]->minor)));
    }
#line 2631 "smarty_internal_templateparser.php"
#line 500 "smarty_internal_templateparser.y"
    function yy_r57(){
    $this->_retvalue = SMARTY_INTERNAL_COMPILE_BLOCK::compileChildBlock($this->compiler);
    }
#line 2636 "smarty_internal_templateparser.php"
#line 506 "smarty_internal_templateparser.y"
    function yy_r58(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array());
    }
#line 2641 "smarty_internal_templateparser.php"
#line 510 "smarty_internal_templateparser.y"
    function yy_r59(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2646 "smarty_internal_templateparser.php"
#line 515 "smarty_internal_templateparser.y"
    function yy_r60(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2651 "smarty_internal_templateparser.php"
#line 519 "smarty_internal_templateparser.y"
    function yy_r61(){
    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor.'close',array(),array('object_methode'=>$this->yystack[$this->yyidx + -2]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + -1]->minor));
    }
#line 2656 "smarty_internal_templateparser.php"
#line 527 "smarty_internal_templateparser.y"
    function yy_r62(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2662 "smarty_internal_templateparser.php"
#line 533 "smarty_internal_templateparser.y"
    function yy_r63(){
    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 2667 "smarty_internal_templateparser.php"
#line 538 "smarty_internal_templateparser.y"
    function yy_r64(){
    $this->_retvalue = array();
    }
#line 2672 "smarty_internal_templateparser.php"
#line 543 "smarty_internal_templateparser.y"
    function yy_r65(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'true');
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'false');
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'null');
    } else {
        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>"'".$this->yystack[$this->yyidx + 0]->minor."'");
    }
    }
#line 2685 "smarty_internal_templateparser.php"
#line 555 "smarty_internal_templateparser.y"
    function yy_r66(){
    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor," =\n\r\t")=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2690 "smarty_internal_templateparser.php"
#line 563 "smarty_internal_templateparser.y"
    function yy_r68(){
    $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
#line 2695 "smarty_internal_templateparser.php"
#line 575 "smarty_internal_templateparser.y"
    function yy_r71(){
    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2700 "smarty_internal_templateparser.php"
#line 588 "smarty_internal_templateparser.y"
    function yy_r73(){
    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;
    }
#line 2706 "smarty_internal_templateparser.php"
#line 593 "smarty_internal_templateparser.y"
    function yy_r74(){
    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2711 "smarty_internal_templateparser.php"
#line 621 "smarty_internal_templateparser.y"
    function yy_r79(){
    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\''. $this->yystack[$this->yyidx + -2]->minor .'://'. $this->yystack[$this->yyidx + 0]->minor . '\')';
    }
#line 2716 "smarty_internal_templateparser.php"
#line 626 "smarty_internal_templateparser.y"
    function yy_r80(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2721 "smarty_internal_templateparser.php"
#line 645 "smarty_internal_templateparser.y"
    function yy_r84(){
    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));
    }
#line 2726 "smarty_internal_templateparser.php"
#line 651 "smarty_internal_templateparser.y"
    function yy_r85(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2731 "smarty_internal_templateparser.php"
#line 655 "smarty_internal_templateparser.y"
    function yy_r86(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2736 "smarty_internal_templateparser.php"
#line 659 "smarty_internal_templateparser.y"
    function yy_r87(){
    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2741 "smarty_internal_templateparser.php"
#line 667 "smarty_internal_templateparser.y"
    function yy_r89(){
    $this->_retvalue = '!('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2746 "smarty_internal_templateparser.php"
#line 671 "smarty_internal_templateparser.y"
    function yy_r90(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -2]->minor.' % '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2751 "smarty_internal_templateparser.php"
#line 675 "smarty_internal_templateparser.y"
    function yy_r91(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2756 "smarty_internal_templateparser.php"
#line 679 "smarty_internal_templateparser.y"
    function yy_r92(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2761 "smarty_internal_templateparser.php"
#line 683 "smarty_internal_templateparser.y"
    function yy_r93(){
    $this->_retvalue = '!(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2766 "smarty_internal_templateparser.php"
#line 687 "smarty_internal_templateparser.y"
    function yy_r94(){
    $this->_retvalue = '(1 & '.$this->yystack[$this->yyidx + -2]->minor.' / '.$this->yystack[$this->yyidx + 0]->minor.')';
    }
#line 2771 "smarty_internal_templateparser.php"
#line 715 "smarty_internal_templateparser.y"
    function yy_r101(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->yystack[$this->yyidx + 0]->minor.';?>';
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.'$_tmp'.$this->prefix_number;
    }
#line 2778 "smarty_internal_templateparser.php"
#line 724 "smarty_internal_templateparser.y"
    function yy_r102(){
    $this->_retvalue = $this->yystack[$this->yyidx + -6]->minor.' ? '. $this->compileVariable("'".$this->yystack[$this->yyidx + -2]->minor."'") . ' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2783 "smarty_internal_templateparser.php"
#line 728 "smarty_internal_templateparser.y"
    function yy_r103(){
    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2788 "smarty_internal_templateparser.php"
#line 744 "smarty_internal_templateparser.y"
    function yy_r106(){
    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2793 "smarty_internal_templateparser.php"
#line 761 "smarty_internal_templateparser.y"
    function yy_r110(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2798 "smarty_internal_templateparser.php"
#line 765 "smarty_internal_templateparser.y"
    function yy_r111(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';
    }
#line 2803 "smarty_internal_templateparser.php"
#line 769 "smarty_internal_templateparser.y"
    function yy_r112(){
    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2808 "smarty_internal_templateparser.php"
#line 774 "smarty_internal_templateparser.y"
    function yy_r113(){
    if (preg_match('~^true$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'true';
    } elseif (preg_match('~^false$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'false';
    } elseif (preg_match('~^null$~i', $this->yystack[$this->yyidx + 0]->minor)) {
        $this->_retvalue = 'null';
    } else {
        $this->_retvalue = "'".$this->yystack[$this->yyidx + 0]->minor."'";
    }
    }
#line 2821 "smarty_internal_templateparser.php"
#line 792 "smarty_internal_templateparser.y"
    function yy_r115(){
    $this->_retvalue = "(". $this->yystack[$this->yyidx + -1]->minor .")";
    }
#line 2826 "smarty_internal_templateparser.php"
#line 806 "smarty_internal_templateparser.y"
    function yy_r118(){
    $len = strlen($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = '$_smarty_tpl->tpl_vars->' . substr($this->yystack[$this->yyidx + 0]->minor,1,$len-3) . "['value']". substr($this->yystack[$this->yyidx + 0]->minor,$len-2);
    }
#line 2832 "smarty_internal_templateparser.php"
#line 812 "smarty_internal_templateparser.y"
    function yy_r119(){
    if (!$this->security || isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor]) || $this->smarty->security_policy->isTrustedStaticClass($this->yystack[$this->yyidx + -2]->minor, $this->compiler)) {
        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {
            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor;
        } else {
            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
        }
    } else {
        $this->compiler->trigger_template_error ("static class '".$this->yystack[$this->yyidx + -2]->minor."' is undefined or not allowed by security setting");
    }
    }
#line 2845 "smarty_internal_templateparser.php"
#line 825 "smarty_internal_templateparser.y"
    function yy_r120(){
        $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2850 "smarty_internal_templateparser.php"
#line 834 "smarty_internal_templateparser.y"
    function yy_r122(){
    if ($this->yystack[$this->yyidx + -2]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).'::'.$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].'::'.$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2859 "smarty_internal_templateparser.php"
#line 843 "smarty_internal_templateparser.y"
    function yy_r123(){
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php ob_start();?>'.$this->yystack[$this->yyidx + 0]->minor.'<?php $_tmp'.$this->prefix_number.'=ob_get_clean();?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number;
    }
#line 2866 "smarty_internal_templateparser.php"
#line 858 "smarty_internal_templateparser.y"
    function yy_r125(){
    if ($this->yystack[$this->yyidx + 0]->minor['var'] == '\'smarty\'') {
        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);
        $this->_retvalue = $smarty_var;
    } else {
        // used for array reset,next,prev,end,current
        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];
        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];
    }
    }
#line 2879 "smarty_internal_templateparser.php"
#line 871 "smarty_internal_templateparser.y"
    function yy_r126(){
    $this->_retvalue = '$_smarty_tpl->tpl_vars->' . trim($this->yystack[$this->yyidx + -2]->minor,"'") . "['". $this->yystack[$this->yyidx + 0]->minor . "']";
    }
#line 2884 "smarty_internal_templateparser.php"
#line 881 "smarty_internal_templateparser.y"
    function yy_r128(){
    $var = trim($this->yystack[$this->yyidx + -1]->minor,'\'');
    $this->_retvalue = "\$_smarty_tpl->tpl_vars->___config_var_{$var}['value']";
    }
#line 2890 "smarty_internal_templateparser.php"
#line 886 "smarty_internal_templateparser.y"
    function yy_r129(){
    $var = trim($this->yystack[$this->yyidx + -2]->minor,'\'');
    $this->_retvalue = "\$_smarty_tpl->tpl_vars->___config_var_{$var}['value']".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2896 "smarty_internal_templateparser.php"
#line 891 "smarty_internal_templateparser.y"
    function yy_r130(){
    $this->_retvalue = "\$_smarty_tpl->tpl_vars->___config_var_{{$this->yystack[$this->yyidx + -1]->minor}}['value']";
    }
#line 2901 "smarty_internal_templateparser.php"
#line 895 "smarty_internal_templateparser.y"
    function yy_r131(){
    $this->_retvalue = "\$_smarty_tpl->tpl_vars->___config_var_{{$this->yystack[$this->yyidx + -2]->minor}}['value']".$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2906 "smarty_internal_templateparser.php"
#line 899 "smarty_internal_templateparser.y"
    function yy_r132(){
    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);
    }
#line 2911 "smarty_internal_templateparser.php"
#line 912 "smarty_internal_templateparser.y"
    function yy_r134(){
    return;
    }
#line 2916 "smarty_internal_templateparser.php"
#line 918 "smarty_internal_templateparser.y"
    function yy_r135(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';
    }
#line 2921 "smarty_internal_templateparser.php"
#line 922 "smarty_internal_templateparser.y"
    function yy_r136(){
    $this->_retvalue = '['.$this->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';
    }
#line 2926 "smarty_internal_templateparser.php"
#line 926 "smarty_internal_templateparser.y"
    function yy_r137(){
    $this->_retvalue = "['". $this->yystack[$this->yyidx + 0]->minor ."']";
    }
#line 2931 "smarty_internal_templateparser.php"
#line 930 "smarty_internal_templateparser.y"
    function yy_r138(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + 0]->minor ."]";
    }
#line 2936 "smarty_internal_templateparser.php"
#line 934 "smarty_internal_templateparser.y"
    function yy_r139(){
    $this->_retvalue = "[". $this->yystack[$this->yyidx + -1]->minor ."]";
    }
#line 2941 "smarty_internal_templateparser.php"
#line 939 "smarty_internal_templateparser.y"
    function yy_r140(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\'][\'index\']').']';
    }
#line 2946 "smarty_internal_templateparser.php"
#line 943 "smarty_internal_templateparser.y"
    function yy_r141(){
    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\'section\'][\''.$this->yystack[$this->yyidx + -3]->minor.'\'][\''.$this->yystack[$this->yyidx + -1]->minor.'\']').']';
    }
#line 2951 "smarty_internal_templateparser.php"
#line 953 "smarty_internal_templateparser.y"
    function yy_r143(){
    $this->_retvalue = '[]';
    }
#line 2956 "smarty_internal_templateparser.php"
#line 966 "smarty_internal_templateparser.y"
    function yy_r145(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2961 "smarty_internal_templateparser.php"
#line 971 "smarty_internal_templateparser.y"
    function yy_r146(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + 0]->minor.'\'';
    }
#line 2966 "smarty_internal_templateparser.php"
#line 976 "smarty_internal_templateparser.y"
    function yy_r147(){
    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 2971 "smarty_internal_templateparser.php"
#line 983 "smarty_internal_templateparser.y"
    function yy_r148(){
    if ($this->yystack[$this->yyidx + -1]->minor['var'] == '\'smarty\'') {
        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;
    } else {
        $this->_retvalue = $this->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;
    }
    }
#line 2980 "smarty_internal_templateparser.php"
#line 992 "smarty_internal_templateparser.y"
    function yy_r149(){
    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;
    }
#line 2985 "smarty_internal_templateparser.php"
#line 997 "smarty_internal_templateparser.y"
    function yy_r150(){
    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2990 "smarty_internal_templateparser.php"
#line 1002 "smarty_internal_templateparser.y"
    function yy_r151(){
    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 2998 "smarty_internal_templateparser.php"
#line 1009 "smarty_internal_templateparser.y"
    function yy_r152(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 3006 "smarty_internal_templateparser.php"
#line 1016 "smarty_internal_templateparser.y"
    function yy_r153(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 3014 "smarty_internal_templateparser.php"
#line 1023 "smarty_internal_templateparser.y"
    function yy_r154(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->_retvalue = '->{\''.$this->yystack[$this->yyidx + -4]->minor.'\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';
    }
#line 3022 "smarty_internal_templateparser.php"
#line 1031 "smarty_internal_templateparser.y"
    function yy_r155(){
    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3027 "smarty_internal_templateparser.php"
#line 1039 "smarty_internal_templateparser.y"
    function yy_r156(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (strcasecmp($this->yystack[$this->yyidx + -3]->minor,'isset') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'empty') === 0 || strcasecmp($this->yystack[$this->yyidx + -3]->minor,'array') === 0 || is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $func_name = strtolower($this->yystack[$this->yyidx + -3]->minor);
            if ($func_name == 'isset') {
                if (count($this->yystack[$this->yyidx + -1]->minor) == 0) {
                    $this->compiler->trigger_template_error ('Illegal number of paramer in "isset()"');
                }
                $par = implode(',',$this->yystack[$this->yyidx + -1]->minor);
                preg_match('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)(.*)/',$par,$match);
                if (isset($match[1])) {
                    $search = array('/\$_smarty_tpl->tpl_vars->([0-9]*[a-zA-Z_]\w*)/','/\[\'[0-9]*[a-zA-Z_]\w*\'\].*/');
                    $replace = array('$_smarty_tpl->getVariable(\'\1\', null, true, false)','');
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.preg_replace($search, $replace, $par).';?>';
                    $isset_par = '$_tmp'.$this->prefix_number.$match[2];
                } else {
                    $this->prefix_number++;
                    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='. $par .';?>';
                    $isset_par = '$_tmp'.$this->prefix_number;
                }
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". $isset_par .")";
            } elseif (in_array($func_name,array('empty','reset','current','end','prev','next'))){
                if (count($this->yystack[$this->yyidx + -1]->minor) != 1) {
                    $this->compiler->trigger_template_error ("Illegal number of paramer in \"{$func_name}\"");
                }
                $this->_retvalue = $func_name.'('.$this->yystack[$this->yyidx + -1]->minor[0].')';
            } else {
                $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
            }
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 3064 "smarty_internal_templateparser.php"
#line 1078 "smarty_internal_templateparser.y"
    function yy_r157(){
    if (!$this->security || $this->smarty->security_policy->isTrustedPhpFunction($this->yystack[$this->yyidx + -3]->minor, $this->compiler)) {
        if (is_callable($this->yystack[$this->yyidx + -3]->minor)) {
            $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
        } else {
            $this->compiler->trigger_template_error ("unknown function \"" . $this->yystack[$this->yyidx + -3]->minor . "\"");
        }
    }
    }
#line 3075 "smarty_internal_templateparser.php"
#line 1091 "smarty_internal_templateparser.y"
    function yy_r158(){
    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) == '_') {
        $this->compiler->trigger_template_error (self::Err1);
    }
    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . "(". implode(',',$this->yystack[$this->yyidx + -1]->minor) .")";
    }
#line 3083 "smarty_internal_templateparser.php"
#line 1098 "smarty_internal_templateparser.y"
    function yy_r159(){
    if ($this->security) {
        $this->compiler->trigger_template_error (self::Err2);
    }
    $this->prefix_number++;
    $this->compiler->prefix_code[] = '<?php $_tmp'.$this->prefix_number.'='.$this->compileVariable("'".$this->yystack[$this->yyidx + -3]->minor."'").';?>';
    $this->_retvalue = '$_tmp'.$this->prefix_number.'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';
    }
#line 3093 "smarty_internal_templateparser.php"
#line 1109 "smarty_internal_templateparser.y"
    function yy_r160(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));
    }
#line 3098 "smarty_internal_templateparser.php"
#line 1126 "smarty_internal_templateparser.y"
    function yy_r163(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));
    }
#line 3103 "smarty_internal_templateparser.php"
#line 1130 "smarty_internal_templateparser.y"
    function yy_r164(){
    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));
    }
#line 3108 "smarty_internal_templateparser.php"
#line 1138 "smarty_internal_templateparser.y"
    function yy_r166(){
    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);
    }
#line 3113 "smarty_internal_templateparser.php"
#line 1146 "smarty_internal_templateparser.y"
    function yy_r167(){
    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);
    }
#line 3118 "smarty_internal_templateparser.php"
#line 1180 "smarty_internal_templateparser.y"
    function yy_r174(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3123 "smarty_internal_templateparser.php"
#line 1185 "smarty_internal_templateparser.y"
    function yy_r175(){
    $this->_retvalue = '$'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3128 "smarty_internal_templateparser.php"
#line 1191 "smarty_internal_templateparser.y"
    function yy_r176(){
    $this->_retvalue = '==';
    }
#line 3133 "smarty_internal_templateparser.php"
#line 1195 "smarty_internal_templateparser.y"
    function yy_r177(){
    $this->_retvalue = '!=';
    }
#line 3138 "smarty_internal_templateparser.php"
#line 1199 "smarty_internal_templateparser.y"
    function yy_r178(){
    $this->_retvalue = '>';
    }
#line 3143 "smarty_internal_templateparser.php"
#line 1203 "smarty_internal_templateparser.y"
    function yy_r179(){
    $this->_retvalue = '<';
    }
#line 3148 "smarty_internal_templateparser.php"
#line 1207 "smarty_internal_templateparser.y"
    function yy_r180(){
    $this->_retvalue = '>=';
    }
#line 3153 "smarty_internal_templateparser.php"
#line 1211 "smarty_internal_templateparser.y"
    function yy_r181(){
    $this->_retvalue = '<=';
    }
#line 3158 "smarty_internal_templateparser.php"
#line 1215 "smarty_internal_templateparser.y"
    function yy_r182(){
    $this->_retvalue = '===';
    }
#line 3163 "smarty_internal_templateparser.php"
#line 1219 "smarty_internal_templateparser.y"
    function yy_r183(){
    $this->_retvalue = '!==';
    }
#line 3168 "smarty_internal_templateparser.php"
#line 1223 "smarty_internal_templateparser.y"
    function yy_r184(){
    $this->_retvalue = '%';
    }
#line 3173 "smarty_internal_templateparser.php"
#line 1227 "smarty_internal_templateparser.y"
    function yy_r185(){
    $this->_retvalue = '&&';
    }
#line 3178 "smarty_internal_templateparser.php"
#line 1231 "smarty_internal_templateparser.y"
    function yy_r186(){
    $this->_retvalue = '||';
    }
#line 3183 "smarty_internal_templateparser.php"
#line 1235 "smarty_internal_templateparser.y"
    function yy_r187(){
    $this->_retvalue = ' XOR ';
    }
#line 3188 "smarty_internal_templateparser.php"
#line 1242 "smarty_internal_templateparser.y"
    function yy_r188(){
    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';
    }
#line 3193 "smarty_internal_templateparser.php"
#line 1250 "smarty_internal_templateparser.y"
    function yy_r190(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3198 "smarty_internal_templateparser.php"
#line 1258 "smarty_internal_templateparser.y"
    function yy_r192(){
    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3203 "smarty_internal_templateparser.php"
#line 1262 "smarty_internal_templateparser.y"
    function yy_r193(){
    $this->_retvalue = '\''.$this->yystack[$this->yyidx + -2]->minor.'\'=>'.$this->yystack[$this->yyidx + 0]->minor;
    }
#line 3208 "smarty_internal_templateparser.php"
#line 1274 "smarty_internal_templateparser.y"
    function yy_r195(){
    $this->_retvalue = "''";
    }
#line 3213 "smarty_internal_templateparser.php"
#line 1278 "smarty_internal_templateparser.y"
    function yy_r196(){
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php();
    }
#line 3218 "smarty_internal_templateparser.php"
#line 1283 "smarty_internal_templateparser.y"
    function yy_r197(){
    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this->yystack[$this->yyidx + 0]->minor);
    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;
    }
#line 3224 "smarty_internal_templateparser.php"
#line 1288 "smarty_internal_templateparser.y"
    function yy_r198(){
    $this->_retvalue = new _smarty_doublequoted($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3229 "smarty_internal_templateparser.php"
#line 1292 "smarty_internal_templateparser.y"
    function yy_r199(){
    $this->_retvalue = new _smarty_code($this, '(string)'.$this->yystack[$this->yyidx + -1]->minor);
    }
#line 3234 "smarty_internal_templateparser.php"
#line 1300 "smarty_internal_templateparser.y"
    function yy_r201(){
    $this->_retvalue = new _smarty_code($this, '(string)$_smarty_tpl->tpl_vars->'. substr($this->yystack[$this->yyidx + 0]->minor,1) . "['value']");
    }
#line 3239 "smarty_internal_templateparser.php"
#line 1308 "smarty_internal_templateparser.y"
    function yy_r203(){
    $this->_retvalue = new _smarty_code($this, '(string)('.$this->yystack[$this->yyidx + -1]->minor.')');
    }
#line 3244 "smarty_internal_templateparser.php"
#line 1312 "smarty_internal_templateparser.y"
    function yy_r204(){
    $this->_retvalue = new _smarty_tag($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3249 "smarty_internal_templateparser.php"
#line 1316 "smarty_internal_templateparser.y"
    function yy_r205(){
    $this->_retvalue = new _smarty_dq_content($this, $this->yystack[$this->yyidx + 0]->minor);
    }
#line 3254 "smarty_internal_templateparser.php"

    private $_retvalue;

    function yy_reduce($yyruleno)
    {
        $yymsp = $this->yystack[$this->yyidx];
        if (self::$yyTraceFILE && $yyruleno >= 0
              && $yyruleno < count(self::$yyRuleName)) {
            fprintf(self::$yyTraceFILE, "%sReduce (%d) [%s].\n",
                self::$yyTracePrompt, $yyruleno,
                self::$yyRuleName[$yyruleno]);
        }

        $this->_retvalue = $yy_lefthand_side = null;
        if (array_key_exists($yyruleno, self::$yyReduceMap)) {
            // call the action
            $this->_retvalue = null;
            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();
            $yy_lefthand_side = $this->_retvalue;
        }
        $yygoto = self::$yyRuleInfo[$yyruleno]['lhs'];
        $yysize = self::$yyRuleInfo[$yyruleno]['rhs'];
        $this->yyidx -= $yysize;
        for($i = $yysize; $i; $i--) {
            // pop all of the right-hand side parameters
            array_pop($this->yystack);
        }
        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);
        if ($yyact < self::YYNSTATE) {
            if (!self::$yyTraceFILE && $yysize) {
                $this->yyidx++;
                $x = new TP_yyStackEntry;
                $x->stateno = $yyact;
                $x->major = $yygoto;
                $x->minor = $yy_lefthand_side;
                $this->yystack[$this->yyidx] = $x;
            } else {
                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);
            }
        } elseif ($yyact == self::YYNSTATE + self::YYNRULE + 1) {
            $this->yy_accept();
        }
    }

    function yy_parse_failed()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sFail!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $this->yy_pop_parser_stack();
        }
    }

    function yy_syntax_error($yymajor, $TOKEN)
    {
#line 95 "smarty_internal_templateparser.y"

    $this->internalError = true;
    $this->yymajor = $yymajor;
    $this->compiler->trigger_template_error();
#line 3317 "smarty_internal_templateparser.php"
    }

    function yy_accept()
    {
        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sAccept!\n", self::$yyTracePrompt);
        }
        while ($this->yyidx >= 0) {
            $stack = $this->yy_pop_parser_stack();
        }
#line 87 "smarty_internal_templateparser.y"

    $this->successful = !$this->internalError;
    $this->internalError = false;
    $this->retvalue = $this->_retvalue;
    //echo $this->retvalue."\n\n";
#line 3335 "smarty_internal_templateparser.php"
    }

    function doParse($yymajor, $yytokenvalue)
    {
        $yyerrorhit = 0;   /* True if yymajor has invoked an error */

        if ($this->yyidx === null || $this->yyidx < 0) {
            $this->yyidx = 0;
            $this->yyerrcnt = -1;
            $x = new TP_yyStackEntry;
            $x->stateno = 0;
            $x->major = 0;
            $this->yystack = array();
            array_push($this->yystack, $x);
        }
        $yyendofinput = ($yymajor==0);

        if (self::$yyTraceFILE) {
            fprintf(self::$yyTraceFILE, "%sInput %s\n",
                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
        }

        do {
            $yyact = $this->yy_find_shift_action($yymajor);
            if ($yymajor < self::YYERRORSYMBOL &&
                  !$this->yy_is_expected_token($yymajor)) {
                // force a syntax error
                $yyact = self::YY_ERROR_ACTION;
            }
            if ($yyact < self::YYNSTATE) {
                $this->yy_shift($yyact, $yymajor, $yytokenvalue);
                $this->yyerrcnt--;
                if ($yyendofinput && $this->yyidx >= 0) {
                    $yymajor = 0;
                } else {
                    $yymajor = self::YYNOCODE;
                }
            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {
                $this->yy_reduce($yyact - self::YYNSTATE);
            } elseif ($yyact == self::YY_ERROR_ACTION) {
                if (self::$yyTraceFILE) {
                    fprintf(self::$yyTraceFILE, "%sSyntax Error!\n",
                        self::$yyTracePrompt);
                }
                if (self::YYERRORSYMBOL) {
                    if ($this->yyerrcnt < 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $yymx = $this->yystack[$this->yyidx]->major;
                    if ($yymx == self::YYERRORSYMBOL || $yyerrorhit ){
                        if (self::$yyTraceFILE) {
                            fprintf(self::$yyTraceFILE, "%sDiscard input token %s\n",
                                self::$yyTracePrompt, $this->yyTokenName[$yymajor]);
                        }
                        $this->yy_destructor($yymajor, $yytokenvalue);
                        $yymajor = self::YYNOCODE;
                    } else {
                        while ($this->yyidx >= 0 &&
                                 $yymx != self::YYERRORSYMBOL &&
        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE
                              ){
                            $this->yy_pop_parser_stack();
                        }
                        if ($this->yyidx < 0 || $yymajor==0) {
                            $this->yy_destructor($yymajor, $yytokenvalue);
                            $this->yy_parse_failed();
                            $yymajor = self::YYNOCODE;
                        } elseif ($yymx != self::YYERRORSYMBOL) {
                            $u2 = 0;
                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);
                        }
                    }
                    $this->yyerrcnt = 3;
                    $yyerrorhit = 1;
                } else {
                    if ($this->yyerrcnt <= 0) {
                        $this->yy_syntax_error($yymajor, $yytokenvalue);
                    }
                    $this->yyerrcnt = 3;
                    $this->yy_destructor($yymajor, $yytokenvalue);
                    if ($yyendofinput) {
                        $this->yy_parse_failed();
                    }
                    $yymajor = self::YYNOCODE;
                }
            } else {
                $this->yy_accept();
                $yymajor = self::YYNOCODE;
            }
        } while ($yymajor != self::YYNOCODE && $this->yyidx >= 0);
    }
}
